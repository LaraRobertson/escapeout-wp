{"version":3,"file":"view.js","mappings":"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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,qBAAqB;AAC7C;AACA;AACA;AACA;AACA,uCAAuC;;;;;;;;;;;ACxK1B;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kBAAkB;AAClB,uBAAuB,mBAAO,CAAC,sFAAyB;AACxD,4BAA4B,mBAAO,CAAC,sFAAqB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,wBAAwB,mBAAmB;AAC3C;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD,wCAAwC,+EAA+E;AACvH;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;;;;;;;;;;;AC5FL;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,qBAAqB,GAAG,eAAe;AACvC,0BAA0B,mBAAO,CAAC,4FAA4B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,sBAAsB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,sBAAsB;AACxD,oDAAoD,sBAAsB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,gBAAgB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,+BAA+B;AACrF;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;;;;;;;;;;;AC7KR;AACb;AACA;AACA;AACA;AACA,eAAe,oCAAoC;AACnD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,aAAa,mBAAO,CAAC,6FAA4B;AACjD,aAAa,mBAAO,CAAC,+EAAqB;AAC1C,aAAa,mBAAO,CAAC,2EAAmB;AACxC,aAAa,mBAAO,CAAC,qGAAgC;AACrD,aAAa,mBAAO,CAAC,2FAA2B;AAChD,aAAa,mBAAO,CAAC,qFAAwB;AAC7C,aAAa,mBAAO,CAAC,2EAAmB;AACxC,aAAa,mBAAO,CAAC,uEAAiB;AACtC,aAAa,mBAAO,CAAC,mFAAuB;AAC5C,aAAa,mBAAO,CAAC,2EAAmB;AACxC,aAAa,mBAAO,CAAC,yEAAkB;AACvC,aAAa,mBAAO,CAAC,iHAAmC;AACxD,aAAa,mBAAO,CAAC,2GAAgC;AACrD,aAAa,mBAAO,CAAC,iHAAmC;AACxD,aAAa,mBAAO,CAAC,6GAAiC;AACtD,aAAa,mBAAO,CAAC,iHAAmC;AACxD,aAAa,mBAAO,CAAC,+GAAkC;;;;;;;;;;;AChC1C;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,0BAA0B;AAClE;AACA,6BAA6B;;;;;;;;;;;AC1BhB;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;;;;;;;;;;;ACzCb;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mCAAmC;AACnC,mBAAmB,mBAAO,CAAC,wEAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;;;;;;;;;;;ACjCtB;AACb,8CAA6C,EAAE,aAAa,EAAC;;;;;;;;;;;ACDhD;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,qBAAqB;AACrB,eAAe,mBAAO,CAAC,mEAAiB;AACxC,eAAe,mBAAO,CAAC,yEAAoB;AAC3C,yBAAyB,mBAAO,CAAC,qGAAkC;AACnE,4BAA4B,mBAAO,CAAC,6FAA8B;AAClE,6BAA6B,mBAAO,CAAC,0FAAuB;AAC5D,uBAAuB,mBAAO,CAAC,8EAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,gCAAgC;AAC9C,cAAc,+BAA+B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gHAAgH;AAClI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF,mBAAmB;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,QAAQ;AACzE;AACA,mDAAmD,SAAS,kCAAkC;AAC9F;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE;AACzE;AACA;AACA;AACA,qBAAqB;;;;;;;;;;;ACjLR;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,iBAAiB,kBAAkB,kBAAkB;;;;;;;;;;;ACZzC;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,cAAc;AACd,eAAe,mBAAO,CAAC,gEAAc;AACrC,4BAA4B,mBAAO,CAAC,0FAA2B;AAC/D,gBAAgB,mBAAO,CAAC,+DAAS;AACjC,sBAAsB,mBAAO,CAAC,2EAAe;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,2BAA2B;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F;AAC1F;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sFAAsF;AACtF;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,KAAK,GAAG,6DAA6D,qBAAqB;AAC3J;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,2BAA2B,yCAAyC,IAAI;AACxE;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;;;;;;;;;;;ACnMD;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,iBAAiB,KAAK,GAAG,OAAO,IAAI,QAAQ;AAC5C;AACA;AACA;AACA;AACA;AACA,mBAAmB;;;;;;;;;;;ACdN;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,uBAAuB,GAAG,eAAe;AACzC,iBAAiB,mBAAO,CAAC,iEAAU;AACnC;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,cAAc;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;;;;;;;;;;;ACpIV;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,8BAA8B,GAAG,8BAA8B,GAAG,qCAAqC;AACvG,gBAAgB,mBAAO,CAAC,+DAAS;AACjC;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,iEAAiE,KAAK;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,uCAAuC;AAChE;AACA;AACA;AACA;AACA,8BAA8B;;;;;;;;;;;ACrCjB;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,sBAAsB,GAAG,sCAAsC,GAAG,sDAAsD,GAAG,sDAAsD;AACjL,kBAAkB,mBAAO,CAAC,4EAAoB;AAC9C,kBAAkB,mBAAO,CAAC,4EAAoB;AAC9C,8BAA8B,mBAAO,CAAC,kHAAoC;AAC1E,8BAA8B,mBAAO,CAAC,kHAAoC;AAC1E,4BAA4B,mBAAO,CAAC,8GAAkC;AACtE,6BAA6B,mBAAO,CAAC,gHAAmC;AACxE;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,gDAAgD,qBAAqB;AACrE,gDAAgD,uBAAuB;AACvE,gDAAgD,0BAA0B;AAC1E;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,yBAAyB;AACzE;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,yBAAyB;AACzE,gDAAgD,4BAA4B;AAC5E;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA,gDAAgD,yBAAyB;AACzE,gDAAgD,0BAA0B;AAC1E,gDAAgD,sBAAsB;AACtE;AACA,mBAAmB,wBAAwB;AAC3C;AACA;AACA,gDAAgD,0BAA0B;AAC1E,gDAAgD,4BAA4B;AAC5E;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA,gDAAgD,uBAAuB;AACvE,gDAAgD,4BAA4B;AAC5E,gDAAgD,oCAAoC;AACpF;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA,mBAAmB,2BAA2B;AAC9C;AACA;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA,gDAAgD,uBAAuB;AACvE,gDAAgD,0BAA0B;AAC1E,gDAAgD,6BAA6B;AAC7E,gDAAgD,yBAAyB;AACzE;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,0BAA0B;AAC1E,gDAAgD,yBAAyB;AACzE,gDAAgD,wBAAwB;AACxE,gDAAgD,wBAAwB;AACxE,gDAAgD,wBAAwB;AACxE,gDAAgD,0BAA0B;AAC1E,gDAAgD,sBAAsB;AACtE,gDAAgD,sBAAsB;AACtE,gDAAgD,yBAAyB;AACzE;AACA,mBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA,gDAAgD,sBAAsB;AACtE;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA,gDAAgD,uBAAuB;AACvE,gDAAgD,uBAAuB;AACvE;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA,gDAAgD,wBAAwB;AACxE,gDAAgD,sBAAsB;AACtE,gDAAgD,uBAAuB;AACvE;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,sBAAsB;AACtE,gDAAgD,yBAAyB;AACzE;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA,gDAAgD,wBAAwB;AACxE;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA,mBAAmB,wBAAwB;AAC3C;AACA;AACA,gDAAgD,sBAAsB;AACtE;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;;;;;;;;;;;ACrVa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,sBAAsB;AACtB;AACA;AACA;AACA,iDAAiD,kCAAkC;AACnF,wBAAwB,8BAA8B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2DAA2D;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,8BAA8B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;;;;;;;;;;;ACjCT;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iCAAiC,GAAG,+BAA+B;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,kDAAkD;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,kDAAkD;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,kDAAkD;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,iCAAiC;;;;;;;;;;;ACvEpB;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,qCAAqC;AACrC,eAAe,mBAAO,CAAC,mEAAiB;AACxC,uBAAuB,mBAAO,CAAC,kFAAiB;AAChD,sBAAsB,mBAAO,CAAC,mGAAe;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,kDAAkD;AACzF;AACA;AACA;AACA;AACA,uDAAuD,8CAA8C;AACrG,uCAAuC,kDAAkD;AACzF;AACA;AACA;AACA;AACA;AACA,yCAAyC,sDAAsD,IAAI;AACnG;AACA,iHAAiH,yCAAyC;AAC1J;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC7Da;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,qCAAqC;AACrC;AACA,kBAAkB,oCAAoC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;;;;;;;;;;;ACxBxB;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kCAAkC;AAClC,eAAe,mBAAO,CAAC,mEAAiB;AACxC,4BAA4B,mBAAO,CAAC,6FAA8B;AAClE,uBAAuB,mBAAO,CAAC,kFAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,UAAU;AAC9D,uCAAuC,kDAAkD;AACzF;AACA;AACA;AACA;AACA;AACA,uCAAuC,kDAAkD;AACzF;AACA;AACA;AACA;AACA,oDAAoD,UAAU;AAC9D,uCAAuC,kDAAkD;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACtDa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC3Ga;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,qCAAqC;AACrC,2BAA2B,mBAAO,CAAC,gGAAqB;AACxD,sBAAsB,mBAAO,CAAC,mGAAe;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,kDAAkD;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;;;;;;;;;;;AC1BxB;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kBAAkB;AAClB,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACVa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mCAAmC;AACnC,2BAA2B,mBAAO,CAAC,gGAAqB;AACxD,qBAAqB,mBAAO,CAAC,+FAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,kDAAkD;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;;;;;;;;;;;AC3BtB;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,oCAAoC;AACpC,eAAe,mBAAO,CAAC,mEAAiB;AACxC,uBAAuB,mBAAO,CAAC,kFAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,kDAAkD;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;;;;;;;;;;;ACnCvB;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mCAAmC;AACnC,eAAe,mBAAO,CAAC,mEAAiB;AACxC,uBAAuB,mBAAO,CAAC,kFAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;;;;;;;;;;;ACtBtB;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mCAAmC,GAAG,kCAAkC,GAAG,mBAAmB,GAAG,mBAAmB,GAAG,oBAAoB,GAAG,eAAe,GAAG,kBAAkB,GAAG,uCAAuC,GAAG,sBAAsB,GAAG,uBAAuB;AAC/Q;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;;;;;;;;;;;ACnDtB;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,yBAAyB;AACzB,eAAe,mBAAO,CAAC,0DAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;;;;;;;;;;;AC3DZ;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;;;;;;;;;;;ACdxB;;;;;;;;;;;;;;ACAO;AACP;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACJA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;;;;;;;;;;;;;;;;;;;;;ACRqD;AACJ;AACQ;AACd;AACQ;;AAEK;AACD;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,sBAAsB;AACzD;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA,mCAAmC,eAAe;AAClD;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,cAAc;AAC1D;;AAEA,WAAW,gEAAe;AAC1B,GAAG;;AAEH;AACA;AACA,2BAA2B,4DAAW;AACtC;AACA;;AAEA;AACA;AACA;AACA,aAAa,oEAAe;AAC5B;;AAEA;AACA;AACA,gDAAgD,cAAc;AAC9D;;AAEA;AACA,WAAW,oEAAe;AAC1B,GAAG;;AAEH;AACA;AACA,wBAAwB,kEAAc;;AAEtC;AACA,WAAW,oEAAe;AAC1B,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oEAAe;AAC1B,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oEAAe;AAC9B;AACA;AACA,iDAAiD,iBAAiB;AAClE;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,qCAAqC;AACrC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oEAAe;AAC9B;AACA;AACA,iDAAiD,iBAAiB;AAClE;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,qCAAqC;AACrC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gEAAe;AAC9B;AACA;AACA,mDAAmD,eAAe;AAClE;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,uCAAuC,sCAAsC;AAC7E;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oEAAe;AAC9B;AACA;AACA,mDAAmD,eAAe;AAClE;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,uCAAuC,sCAAsC;AAC7E;AACA,GAAG;;AAEH;AACA;AACA,iBAAiB,oDAAO;;AAExB;AACA,4CAA4C,cAAc;AAC1D;;AAEA,WAAW,oEAAe;AAC1B,GAAG;;AAEH;AACA;AACA,oBAAoB,0DAAU;;AAE9B;AACA,+CAA+C,cAAc;AAC7D;;AAEA,WAAW,oEAAe;AAC1B,GAAG;;AAEH;AACA;AACA;AACA,sDAAsD,cAAc;AACpE;;AAEA,WAAW,gEAAe;AAC1B,GAAG;;AAEH;AACA;AACA,sBAAsB,8DAAY;;AAElC;AACA,iDAAiD,mBAAmB;AACpE;;AAEA,WAAW,oEAAe;AAC1B,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oEAAe;AAC9B;AACA;AACA,wDAAwD,aAAa;AACrE;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oEAAe;AAC9B;AACA;AACA,wDAAwD,aAAa;AACrE;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oEAAe;AAC9B;AACA;AACA,sDAAsD,aAAa;AACncAAc;AAC3D;;AAEA,WAAW,gEAAe;AAC1B,GAAG;;AAEH;AACA;AACA;AACA,uDAAuD,cAAc;AACrE;;AAEA,WAAW,gEAAe;AAC1B,GAAG;;AAEH;AACA;AACA;;AAEA;AACA,6CAA6C,cAAc;AAC3D;;AAEA,WAAW,oEAAe;AAC1B,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA,6CAA6C,cAAc;AAC3D;;AAEA,WAAW,oEAAe;AAC1B,GAAG;;AAEH;AACA;AACA;AACA,yDAAyD,gBAAgB;AACzE;;AAEA,WAAW,gEAAe;AAC1B,GAAG;;AAEH;AACA;AACA;AACA,yDAAyD,gBAAgB;AACzE;;AAEA,WAAW,gEAAe;AAC1B,GAAG;;AAEH;AACA;AACA,WAAW,gEAAe;AAC1B,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,WAAW,oEAAe;AAC1B,GAAG;;AAEH;AACA;AACA,WAAW,oEAAe;AAC1B,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,oEAAe;AAC3D;;AAEA;AACA;AACA;AACA,kBAAkB,oEAAe;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,oEAAe;AAC/B,kBAAkB,oEAAe;AACjC;AACA;;;;;;;;;;;;;;;;ACvwBwD;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,oEAAe;AAC1B,GAAG;;AAEH;AACA;AACA;AACA,+CAA+C,oEAAe;AAC9D,GAAG;;AAEH;AACA;AACA,WAAW,oEAAe;AAC1B,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,WAAW,oEAAe;AAC1B,GAAG;;AAEH;AACA;AACA,WAAW,oEAAe;AAC1B,GAAG;;AAEH;AACA;AACA,WAAW,oEAAe;AAC1B,GAAG;;AAEH;AACA;AACA,WAAW,oEAAe;AAC1B,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oEAAe;AAC1B,GAAG;AACH;;;;;;;;;;;;;;;AC3FA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C;AACA,+BAA+B,iBAAiB;AAChD;AACA,+BAA+B,eAAe;AAC9C;AACA;AACA,+BAA+B,eAAe;AAC9C;AACA;;AAEA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C;AACA,+BAA+B,iBAAiB;AAChD;AACA,+BAA+B,eAAe;AAC9C;AACA;AACA,+BAA+B,eAAe;AAC9C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,6CAA6C,gBAAgB;AAC7D;AACA;AACA,6CAA6C,iBAAiB;AAC9D;AACA;AACA,6CAA6C,eAAe;AAC5D;AACA;AACA;AACA,6CAA6C,eAAe;AAC5D;AACA;;AAEA;AACA,gBAAgB,MAAM;AACtB,gBAAgB,MAAM;AACtB;;AAEO;AACP;AACA;AACA;;;;;;;;;;;;;;;;AC/DsC;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,gBAAgB,kDAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC5BoD;;AAE7C;AACP,oBAAoB,4DAAa;AACjC;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACRA;AACA;;AAEA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,oBAAoB,kBAAkB,MAAM,WAAW,OAAO,qBAAqB,SAAS,iBAAiB,MAAM,IAAI;AACzI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,UAAU;AACtvN8C;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;;AAEA,0CAA0C,8DAAmB;AAC7D,gBAAgB,8DAAmB;;AAEnC;;AAEA;AACA;;AAEA;AACA,iEAAe,aAAa,EAAC;;;;;;;;;;;;;;;;;;;;ACjD+D;AAClC;AACP;AACN;;AAE7C;AACA,QAAQ,gCAAgC;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,qCAAqC,sEAAc;AACnD;AACA;AACA;AACA;;AAEA,0BAA0B,0DAAU;AACpC,4BAA4B,0DAAU;;AAEtC;AACA,uBAAuB,wGAA+B;AACtD;AACA,yBAAyB,wGAA+B;;AAExD;AACA;AACA;AACA,0DAA0D,4DAAiB;AAC3E;;AAEA;AACA,iEAAe,wBAAwB,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;AC9DgB;AACK;AACJ;AACQ;AAK9B;AACI;AACF;;AAErC;AACA;AACsC;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEgC;;AAEhC;AACA,QAAQ,cAAc;AACtiDAAiD,WAAW;AAC5D;AACA,iDAAiD,WAAW;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oHAAoH;AACpH,gHAAgH;AAChH,0HAA0H;AAC1H,4HAA4H;AAC5H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,yBAAyB,yEAAiB;AAC1C,6DAA6D,uDAAa;;AAE1E;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,kDAAM;;AAE7B,OAAO,oDAAO;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8BAA8B,yEAAc;AAC5C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA,iBAAiB;AACjB;;AAEA,UAAU,iEAAU;AACpB,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe;AACf,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,UAAU,iFAAwB;AAClC;AACA,UAAU,kFAAyB;AACnC;AACA,QAAQ,kFAAyB;AACjC;;AAEA,wBAAwB,iEAAU;AAClC;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iEAAe,MAAM,EAAC;;;;;;;;;;;;;;;;;;;ACjbmD;AAC1B;AACV;;AAErC;AACA,QAAQ,oBAAoB;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,gBAAgB,kDAAM;AACtB,eAAe,sFAAwB,QAAQ,4DAAW;AAC1D;AACA;AACA;;AAEA;AACA,iEAAe,YAAY,EAAC;;;;;;;;;;;;;;;;;;;;AClCwB;AACC;AACQ;AACxB;;AAErC;AACA,QAAQ,kBAAkB;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,gBAAgB,kDAAM;AACtB,gBAAgB,kEAAc,WAAW,0EAAkB;;AAE3D;AACA;AACA;AACA,2BAA2B,6DAAkB;AAC7C;;AAEA;AACA,iEAAe,UAAU,EAAC;;;;;;;;;;;;;;;;;;;ACxCyB;AACE;AAChB;;AAErC;AACA,QAAQ,sBAAsB;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,gBAAgB,kDAAM;AACtB;;AAEA,oCAAoC,gEAAa;AACjD;AACA;AACA,0BAA0B,kEAAc;;AAExC,oCAAoC,gEAAa;AACjD;AACA;AACA,0BAA0B,kEAAc;;AAExC;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA,iEAAe,cAAc,EAAC;;;;;;;;;;;;;;;;;;;;ACpDsB;AACL;AACQ;AAClB;;AAErC;AACA,QAAQ,eAAe;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACO;AACP,gBAAgB,kDAAM;AACtB,gBAAgB,4DAAW,oBAAoB,oEAAe;;AAE9D;AACA;AACA;AACA,2BAA2B,6DAAkB;AAC7C;;AAEA;AACA,iEAAe,OAAO,EAAC;;;;;;;;;;;;;;;;;;;;ACtDsC;AACV;AACJ;AACV;;AAErC;AACA,QAAQ,mBAAmB;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,iBAAiB;AACzE;AACA;AACA;AACA;AACA,wDAAwD,0BAA0B;AAClF;AACA;AACO;AACP,gBAAgB,kDAAM;AACtB;;AAEA,yBAAyB,yEAAiB;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA,8BAA8B,gEAAa;AAC3C;AACA;AACA,0BAA0B,4DAAW;;AAErC,8BAA8B,gEAAa;AAC3C;AACA;AACA,0BAA0B,4DAAW;;AAErC;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA,iEAAe,WAAW,EAAC;;;;;;;;;;;;;;;;AC3E3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iEAAe,MAAM,EAAC;;;;;;;;;;;;;;;;;;ACzCe;AACA;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,aAAa,kDAAM,8CAA8C,kDAAM;AACvE;;AAEA;AACA,iEAAe,OAAO,EAAC;;;;;;;;;;;;;;;ACvChB;AACP,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC7DO;AACP,8BAA8B;AAC9B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,oBAAoB;AACxC;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACxDO;AACP,8BAA8B;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,aAAa;AACb;AACA;;;;;;;;;;;;;;;;;;;;;ACnBgE;AACR;AACQ;AACZ;AACN;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,kBAAkB,wEAAc;AAChC,cAAc,gEAAU;AACxB,kBAAkB,wEAAc;AAChC,YAAY,4DAAQ;AACpB,SAAS,sDAAK;AACd;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,iEAAe,IAAI,EAAC;;;;;;;;;;;;;;;AC5BpB;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC,GAAG;;AAEH;AACA;AACA,cAAc,QAAQ;AACtB,GAAG;;AAEH;;AAEA;AACA;AACA,wBAAwB,QAAQ;AAChC,GAAG;;AAEH;AACA;AACA,cAAc,QAAQ;AACtB,GAAG;;AAEH;AACA;AACA,oBAAoB,QAAQ;AAC5B,GAAG;;AAEH;AACA;AACA,cAAc,QAAQ;AACtB,GAAG;;AAEH;AACA;AACA,cAAc,QAAQ;AACtB,GAAG;;AAEH;AACA;AACA,oBAAoB,QAAQ;AAC5B,GAAG;;AAEH;AACA;AACA,cAAc,QAAQ;AACtB,GAAG;;AAEH;AACA;AACA,oBAAoB,QAAQ;AAC5B,GAAG;;AAEH;AACA;AACA,cAAc,QAAQ;AACtB,GAAG;;AAEH;AACA;AACA,oBAAoB,QAAQ;AAC5B,GAAG;;AAEH;AACA;AACA,cAAc,QAAQ;AACtB,GAAG;;AAEH;AACA;AACA,mBAAmB,QAAQ;AAC3B,GAAG;;AAEH;AACA;AACA,qBAAqB,QAAQ;AAC7B,GAAG;AACH;;AAEO;AACP;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ,yCAAyC,OAAO;AAChD;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;ACpGoE;;AAEpE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,OAAO,OAAO,MAAM;AAC/B,WAAW,OAAO,OAAO,MAAM;AAC/B,aAAa,MAAM,IAAI,MAAM;AAC7B,YAAY,MAAM,IAAI,MAAM;AAC5B;;AAEO;AACP,QAAQ,4EAAiB;AACzB;AACA;AACA,GAAG;;AAEH,QAAQ,4EAAiB;AACzB;AACA;AACA,GAAG;;AAEH,YAAY,4EAAiB;AAC7B;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;;;;;;;;;;;;;;;;ACVgE;;AAEhE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;;AAEA,OAAO,wEAAe;AACtB;AACA;AACA,GAAG;;AAEH,WAAW,wEAAe;AAC1B;AACA;AACA;AACA,GAAG;;AAEH,SAAS,wEAAe;AACxB;AACA;AACA,GAAG;;AAEH,OAAO,wEAAe;AACtB;AACA;AACA,GAAG;;AAEH,aAAa,wEAAe;AAC5B;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;;;;;AC1L0D;AACc;;AAExE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEO;AACP,iBAAiB,gFAAmB;AACpC;AACA;AACA;AACA,GAAG;;AAEH,OAAO,kEAAY;AACnB;AACA;AACA;AACA;AACA,GAAG;;AAEH,WAAW,kEAAY;AACvB;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH,SAAS,kEAAY;AACrB;AACA;AACA;AACA;AACA,GAAG;;AAEH,OAAO,kEAAY;AACnB;AACA;AACA;AACA;AACA,GAAG;;AAEH,aAAa,kEAAY;AACzB;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;;;;;ACnIqC;;AAErC;AACA,QAAQ,kBAAkB;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,gBAAgB,kDAAM;AACtB;AACA;AACA;;AAEA;AACA,iEAAe,UAAU,EAAC;;;;;;;;;;;;;;;;;ACnCqB;;AAE/C;AACA,QAAQ,sBAAsB;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,SAAS,4DAAW,SAAS,6BAA6B;AAC1D;;AAEA;AACA,iEAAe,cAAc,EAAC;;;;;;;;;;;;;;;;;;;ACnCqB;AACE;AACA;;AAErD;AACA,QAAQ,0BAA0B;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,eAAe,kEAAc;AAC7B,0BAA0B,gEAAa;AACvC;AACA;AACA,SAAS,kEAAc;AACvB;;AAEA;AACA,iEAAe,kBAAkB,EAAC;;;;;;;;;;;;;;;;;;AC1C2B;AACxB;;AAErC;AACA,QAAQ,mBAAmB;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,iBAAiB;AAClF;AACA;AACO;AACP,yBAAyB,yEAAiB;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,kDAAM;AACtB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iEAAe,WAAW,EAAC;;;;;;;;;;;;;;;;;;;;ACrDkC;AACV;AACJ;AACA;;AAE/C;AACA,QAAQ,uBAAuB;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACO;AACP,yBAAyB,yEAAiB;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,4DAAW;AAC1B,oBAAoB,gEAAa;AACjC;AACA;AACA,gBAAgB,4DAAW;AAC3B;AACA;;AAEA;AACA,iEAAe,eAAe,EAAC;;;;;;;;;;;;;;;;;AChEM;;AAErC;AACA,QAAQ,mBAAmB;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,gBAAgB,kDAAM;AACtB;AACA;AACA;AACA;;AAE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","sources":["webpack://game-block/./src/components/ShallowEqual.js","webpack://game-block/./src/components/helper.js","webpack://game-block/./node_modules/obscenity/dist/censor/BuiltinStrategies.js","webpack://game-block/./node_modules/obscenity/dist/censor/TextCensor.js","webpack://game-block/./node_modules/obscenity/dist/dataset/DataSet.js","webpack://game-block/./node_modules/obscenity/dist/index.js","webpack://game-block/./node_modules/obscenity/dist/matcher/BlacklistedTerm.js","webpack://game-block/./node_modules/obscenity/dist/matcher/IntervalCollection.js","webpack://game-block/./node_modules/obscenity/dist/matcher/MatchPayload.js","webpack://game-block/./node_modules/obscenity/dist/matcher/Matcher.js","webpack://game-block/./node_modules/obscenity/dist/matcher/regexp/RegExpMatcher.js","webpack://game-block/./node_modules/obscenity/dist/pattern/Nodes.js","webpack://game-block/./node_modules/obscenity/dist/pattern/Parser.js","webpack://game-block/./node_modules/obscenity/dist/pattern/ParserError.js","webpack://game-block/./node_modules/obscenity/dist/pattern/Pattern.js","webpack://game-block/./node_modules/obscenity/dist/pattern/Util.js","webpack://game-block/./node_modules/obscenity/dist/preset/english.js","webpack://game-block/./node_modules/obscenity/dist/transformer/TransformerSet.js","webpack://game-block/./node_modules/obscenity/dist/transformer/Transformers.js","webpack://game-block/./node_modules/obscenity/dist/transformer/collapse-duplicates/index.js","webpack://game-block/./node_modules/obscenity/dist/transformer/collapse-duplicates/transformer.js","webpack://game-block/./node_modules/obscenity/dist/transformer/remap-characters/index.js","webpack://game-block/./node_modules/obscenity/dist/transformer/resolve-confusables/confusables.js","webpack://game-block/./node_modules/obscenity/dist/transformer/resolve-confusables/index.js","webpack://game-block/./node_modules/obscenity/dist/transformer/resolve-leetspeak/dictionary.js","webpack://game-block/./node_modules/obscenity/dist/transformer/resolve-leetspeak/index.js","webpack://game-block/./node_modules/obscenity/dist/transformer/skip-non-alphabetic/index.js","webpack://game-block/./node_modules/obscenity/dist/transformer/to-ascii-lowercase/index.js","webpack://game-block/./node_modules/obscenity/dist/util/Char.js","webpack://game-block/./node_modules/obscenity/dist/util/CharacterIterator.js","webpack://game-block/./node_modules/obscenity/dist/util/Interval.js","webpack://game-block/external module \"@wordpress/interactivity\"","webpack://game-block/./node_modules/date-fns/_lib/addLeadingZeros.js","webpack://game-block/./node_modules/date-fns/_lib/defaultOptions.js","webpack://game-block/./node_modules/date-fns/_lib/format/formatters.js","webpack://game-block/./node_modules/date-fns/_lib/format/lightFormatters.js","webpack://game-block/./node_modules/date-fns/_lib/format/longFormatters.js","webpack://game-block/./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js","webpack://game-block/./node_modules/date-fns/_lib/normalizeDates.js","webpack://game-block/./node_modules/date-fns/_lib/protectedTokens.js","webpack://game-block/./node_modules/date-fns/constants.js","webpack://game-block/./node_modules/date-fns/constructFrom.js","webpack://game-block/./node_modules/date-fns/differenceInCalendarDays.js","webpack://game-block/./node_modules/date-fns/format.js","webpack://game-block/./node_modules/date-fns/getDayOfYear.js","webpack://game-block/./node_modules/date-fns/getISOWeek.js","webpack://game-block/./node_modules/date-fns/getISOWeekYear.js","webpack://game-block/./node_modules/date-fns/getWeek.js","webpack://game-block/./node_modules/date-fns/getWeekYear.js","webpack://game-block/./node_modules/date-fns/isDate.js","webpack://game-block/./node_modules/date-fns/isValid.js","webpack://game-block/./node_modules/date-fns/locale/_lib/buildFormatLongFn.js","webpack://game-block/./node_modules/date-fns/locale/_lib/buildLocalizeFn.js","webpack://game-block/./node_modules/date-fns/locale/_lib/buildMatchFn.js","webpack://game-block/./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js","webpack://game-block/./node_modules/date-fns/locale/en-US.js","webpack://game-block/./node_modules/date-fns/locale/en-US/_lib/formatDistance.js","webpack://game-block/./node_modules/date-fns/locale/en-US/_lib/formatLong.js","webpack://game-block/./node_modules/date-fns/locale/en-US/_lib/formatRelative.js","webpack://game-block/./node_modules/date-fns/locale/en-US/_lib/localize.js","webpack://game-block/./node_modules/date-fns/locale/en-US/_lib/match.js","webpack://game-block/./node_modules/date-fns/startOfDay.js","webpack://game-block/./node_modules/date-fns/startOfISOWeek.js","webpack://game-block/./node_modules/date-fns/startOfISOWeekYear.js","webpack://game-block/./node_modules/date-fns/startOfWeek.js","webpack://game-block/./node_modules/date-fns/startOfWeekYear.js","webpack://game-block/./node_modules/date-fns/startOfYear.js","webpack://game-block/./node_modules/date-fns/toDate.js","webpack://game-block/./node_modules/obscenity/dist/index.mjs","webpack://game-block/webpack/bootstrap","webpack://game-block/webpack/runtime/define property getters","webpack://game-block/webpack/runtime/hasOwnProperty shorthand","webpack://game-block/webpack/runtime/make namespace object","webpack://game-block/./src/view.js"],"sourcesContent":["export const shallowEqual = (object1, object2) => {\r\n    /* guess(value) , answer(object) */\r\n    console.log(\"guess: \" + object1);\r\n    console.log(\"answer: \" + object2);\r\n    const keys1 = Object.keys(object1);\r\n    console.log(\"keys1: \" + keys1.length);\r\n    const keys2 = Object.keys(object2);\r\n    console.log(\"keys2: \" + keys2.length);\r\n    if (keys1.length !== keys2.length) {\r\n        return false;\r\n    }\r\n    for (let key of keys1) {\r\n        console.log(\"object1[key]: \" + object1[key]);\r\n        console.log(\"object2[key]: \" + object2[key]);\r\n        console.log(\"typeof object1[key]: \" + typeof object1[key]);\r\n        console.log(\"typeof object2[key]: \" + typeof object2[key]);\r\n        if (object1[key].toLowerCase() !== object2[key].toLowerCase()) {\r\n            console.log(\"false\");\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}","\r\nexport function removeLocalStorage() {\r\n    console.log(\"remove local storage\");\r\n    localStorage.removeItem(\"agreeToWaiver\");\r\n    localStorage.removeItem(\"userAttributes\");\r\n    localStorage.removeItem(\"gameStatsID\");\r\n    localStorage.removeItem(\"gameScoreID\");\r\n    localStorage.removeItem(\"gameID\");\r\n    localStorage.removeItem(\"gameName\");\r\n    localStorage.removeItem(\"teamName\");\r\n    localStorage.removeItem(\"gameTime\")\r\n    localStorage.removeItem(\"gameHintVisible\");\r\n    localStorage.removeItem(\"timeStart\");\r\n    localStorage.removeItem(\"realTimeEnd\");\r\n    localStorage.removeItem(\"gameNotes\");\r\n    localStorage.removeItem(\"gameTimeHint\");\r\n    localStorage.removeItem(\"clues\");\r\n    localStorage.removeItem(\"cluesArray\");\r\n    localStorage.removeItem(\"gamePuzzleSolved\");\r\n    localStorage.removeItem(\"gamePuzzleGuess\");\r\n    localStorage.removeItem(\"gamePuzzleAnswer\");\r\n    localStorage.removeItem(\"gamePuzzleAnswerCorrect\");\r\n}","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.randomCharFromSetCensorStrategy = exports.fixedCharCensorStrategy = exports.fixedPhraseCensorStrategy = exports.grawlixCensorStrategy = exports.asteriskCensorStrategy = exports.keepEndCensorStrategy = exports.keepStartCensorStrategy = void 0;\nconst Char_1 = require(\"../util/Char\");\n/**\n * A text censoring strategy that extends another strategy, adding the first\n * character matched at the start of the generated string.\n *\n * @example\n * ```typescript\n * const strategy = keepStartCensorStrategy(grawlixCensorStrategy());\n * const censor = new TextCensor().setStrategy(strategy);\n * // Before: 'fuck you'\n * // After: 'f$@* you'\n * ```\n * @example\n * ```typescript\n * // Since keepEndCensorStrategy() returns another text censoring strategy, you can use it\n * // as the base strategy to pass to keepStartCensorStrategy().\n * const strategy = keepStartCensorStrategy(keepEndCensorStrategy(asteriskCensorStrategy()));\n * const censor = new TextCensor().setStrategy(strategy);\n * // Before: 'fuck you'\n * // After: 'f**k you'\n * ```\n * @param baseStrategy - Strategy to extend. It will be used to produce the end of\n * the generated string.\n * @returns A [[TextCensorStrategy]] for use with the [[TextCensor]].\n */\nfunction keepStartCensorStrategy(baseStrategy) {\n    return (ctx) => {\n        if (ctx.overlapsAtStart)\n            return baseStrategy(ctx);\n        const firstChar = String.fromCodePoint(ctx.input.codePointAt(ctx.startIndex));\n        return firstChar + baseStrategy({ ...ctx, matchLength: ctx.matchLength - 1 });\n    };\n}\nexports.keepStartCensorStrategy = keepStartCensorStrategy;\n/**\n * A text censoring strategy that extends another strategy, adding the last\n * character matched at the end of the generated string.\n *\n * @example\n * ```typescript\n * const strategy = keepEndCensorStrategy(asteriskCensorStrategy());\n * const censor = new TextCensor().setStrategy(strategy);\n * // Before: 'fuck you'\n * // After: '***k you'\n * ```\n * @param baseStrategy - Strategy to extend. It will be used to produce the start\n * of the generated string.\n * @returns A [[TextCensorStrategy]] for use with the [[TextCensor]].\n */\nfunction keepEndCensorStrategy(baseStrategy) {\n    return (ctx) => {\n        if (ctx.overlapsAtEnd)\n            return baseStrategy(ctx);\n        const lastChar = String.fromCodePoint(ctx.input.codePointAt(ctx.endIndex));\n        return baseStrategy({ ...ctx, matchLength: ctx.matchLength - 1 }) + lastChar;\n    };\n}\nexports.keepEndCensorStrategy = keepEndCensorStrategy;\n/**\n * A text censoring strategy that generates strings made up of asterisks (`*`).\n *\n * @example\n * ```typescript\n * const strategy = asteriskCensorStrategy();\n * const censor = new TextCensor().setStrategy(strategy);\n * // Before: 'fuck you'\n * // After: '**** you'\n * ```\n * @returns A [[TextCensorStrategy]] for use with the [[TextCensor]].\n */\nfunction asteriskCensorStrategy() {\n    return fixedCharCensorStrategy('*');\n}\nexports.asteriskCensorStrategy = asteriskCensorStrategy;\n/**\n * A text censoring strategy that generates\n * [grawlix](https://www.merriam-webster.com/words-at-play/grawlix-symbols-swearing-comic-strips),\n * i.e. strings that contain the characters `%`, `@`, `$`, `&`, and `*`.\n *\n * @example\n * ```typescript\n * const strategy = grawlixCensorStrategy();\n * const censor = new TextCensor().setStrategy(strategy);\n * // Before: 'fuck you'\n * // After: '%@&* you'\n * ```\n * @returns A [[TextCensorStrategy]] for use with the [[TextCensor]].\n */\nfunction grawlixCensorStrategy() {\n    return randomCharFromSetCensorStrategy('%@$&*');\n}\nexports.grawlixCensorStrategy = grawlixCensorStrategy;\n/**\n * A text censoring strategy that returns a fixed string.\n *\n * @example\n * ```typescript\n * // The replacement phrase '' effectively removes all matched regions\n * // from the string.\n * const strategy = fixedPhraseCensorStrategy('');\n * const censor = new TextCensor().setStrategy(strategy);\n * // Before: 'fuck you'\n * // After: ' you'\n * ```\n * @example\n * ```typescript\n * const strategy = fixedPhraseCensorStrategy('fudge');\n * const censor = new TextCensor().setStrategy(strategy);\n * // Before: 'fuck you'\n * // After: 'fudge you'\n * ```\n * @param phrase - Replacement phrase to use.\n * @returns A [[TextCensorStrategy]] for use with the [[TextCensor]].\n */\nfunction fixedPhraseCensorStrategy(phrase) {\n    return () => phrase;\n}\nexports.fixedPhraseCensorStrategy = fixedPhraseCensorStrategy;\n/**\n * A text censoring strategy that generates replacement strings that are made up\n * of the character given, repeated as many times as needed.\n *\n * @example\n * ```typescript\n * const strategy = fixedCharCensorStrategy('*');\n * const censor = new TextCensor().setStrategy(strategy);\n * // Before: 'fuck you'\n * // After: '**** you'.\n * ```\n * @param char - String that represents the code point which should be used when\n * generating the replacement string. Must be exactly one code point in length.\n * @returns A [[TextCensorStrategy]] for use with the [[TextCensor]].\n */\nfunction fixedCharCensorStrategy(char) {\n    // Make sure the input character is one code point in length.\n    (0, Char_1.getAndAssertSingleCodePoint)(char);\n    return (ctx) => char.repeat(ctx.matchLength);\n}\nexports.fixedCharCensorStrategy = fixedCharCensorStrategy;\n/**\n * A text censoring strategy that generates replacement strings made up of\n * random characters from the set of characters provided.\n *\n * @example\n * ```typescript\n * const strategy = randomCharFromSetCensorStrategy('$#!');\n * const censor = new TextCensor().setStrategy(strategy);\n * // Before: 'fuck you!'\n * // After: '!##$ you!'\n * ```\n * @param charset - Set of characters from which the replacement string should\n * be constructed. Must not be empty.\n * @returns A [[TextCensorStrategy]] for use with the [[TextCensor]].\n */\nfunction randomCharFromSetCensorStrategy(charset) {\n    const chars = [...charset];\n    if (chars.length === 0)\n        throw new Error('The character set passed must not be empty.');\n    return (ctx) => {\n        let censored = '';\n        for (let i = 0; i < ctx.matchLength; i++)\n            censored += chars[Math.floor(Math.random() * chars.length)];\n        return censored;\n    };\n}\nexports.randomCharFromSetCensorStrategy = randomCharFromSetCensorStrategy;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TextCensor = void 0;\nconst MatchPayload_1 = require(\"../matcher/MatchPayload\");\nconst BuiltinStrategies_1 = require(\"./BuiltinStrategies\");\n/**\n * Censors regions of text matched by a [[Matcher]], supporting flexible\n * [[TextCensorStrategy | censoring strategies]].\n */\nclass TextCensor {\n    constructor() {\n        this.strategy = (0, BuiltinStrategies_1.grawlixCensorStrategy)();\n    }\n    /**\n     * Sets the censoring strategy, which is responsible for generating\n     * replacement text for regions of the text that should be censored.\n     *\n     * The default censoring strategy is the [[grawlixCensorStrategy]],\n     * generating text like `$%@*`. There are several other built-in strategies\n     * available:\n     * - [[keepStartCensorStrategy]] - extends another strategy and keeps the\n     *   first character matched, e.g. `f***`.\n     * - [[keepEndCensorStrategy]] - extends another strategy and keeps the last\n     *   character matched, e.g. `***k`.\n     * - [[asteriskCensorStrategy]] - replaces the text with asterisks, e.g.\n     *   `****`.\n     * - [[grawlixCensorStrategy]] - the default strategy, discussed earlier.\n     *\n     * Note that since censoring strategies are just functions (see the\n     * documentation for [[TextCensorStrategy]]), it is relatively simple to\n     * create your own.\n     *\n     * To ease creation of common censoring strategies, we provide a number of\n     * utility functions:\n     * - [[fixedPhraseCensorStrategy]] - generates a fixed phrase, e.g. `fudge`.\n     * - [[fixedCharCensorStrategy]] - generates replacement strings constructed\n     *   from the character given, repeated as many times as needed.\n     * - [[randomCharFromSetCensorStrategy]] - generates replacement strings\n     *   made up of random characters from the set of characters provided.\n     *\n     * @param strategy - Text censoring strategy to use.\n     */\n    setStrategy(strategy) {\n        this.strategy = strategy;\n        return this;\n    }\n    /**\n     * Applies the censoring strategy to the text, returning the censored text.\n     *\n     * **Overlapping regions**\n     *\n     * Overlapping regions are an annoying edge case to deal with when censoring\n     * text. There is no single best way to handle them, but the implementation\n     * of this method guarantees that overlapping regions will always be\n     * replaced, following the rules below:\n     *\n     * - Replacement text for matched regions will be generated in the order\n     *   specified by [[compareMatchByPositionAndId]];\n     * - When generating replacements for regions that overlap at the start with\n     *   some other region, the start index of the censor context passed to the\n     *   censoring strategy will be the end index of the first region, plus one.\n     *\n     * @param input - Input text.\n     * @param matches - A list of matches.\n     * @returns The censored text.\n     */\n    applyTo(input, matches) {\n        if (matches.length === 0)\n            return input;\n        const sorted = [...matches].sort(MatchPayload_1.compareMatchByPositionAndId);\n        let censored = '';\n        let lastIndex = 0; // end index of last match, plus one\n        for (let i = 0; i < sorted.length; i++) {\n            const match = sorted[i];\n            if (lastIndex > match.endIndex)\n                continue; // completely contained in the previous span\n            const overlapsAtStart = match.startIndex < lastIndex;\n            // Add the chunk of text between the end of the last match and the\n            // start of the current match.\n            if (!overlapsAtStart)\n                censored += input.slice(lastIndex, match.startIndex);\n            const actualStartIndex = Math.max(lastIndex, match.startIndex);\n            const overlapsAtEnd = i < sorted.length - 1 && // not the last match\n                match.endIndex >= sorted[i + 1].startIndex && // end index of this match and start index of next one overlap\n                match.endIndex < sorted[i + 1].endIndex; // doesn't completely contain next match\n            censored += this.strategy({ ...match, startIndex: actualStartIndex, input, overlapsAtStart, overlapsAtEnd });\n            lastIndex = match.endIndex + 1;\n        }\n        censored += input.slice(lastIndex);\n        return censored;\n    }\n}\nexports.TextCensor = TextCensor;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PhraseBuilder = exports.DataSet = void 0;\nconst BlacklistedTerm_1 = require(\"../matcher/BlacklistedTerm\");\n/**\n * Holds phrases (groups of patterns and whitelisted terms), optionally\n * associating metadata with them.\n *\n * @typeParam MetadataType - Metadata type for phrases. Note that the metadata\n * type is implicitly nullable.\n */\nclass DataSet {\n    constructor() {\n        this.containers = [];\n        this.patternCount = 0;\n        this.patternIdToPhraseContainer = new Map(); // pattern ID => index of its container\n    }\n    /**\n     * Adds all the phrases from the dataset provided to this one.\n     *\n     * @example\n     * ```typescript\n     * const customDataset = new DataSet().addAll(englishDataset);\n     * ```\n     * @param other - Other dataset.\n     */\n    addAll(other) {\n        for (const container of other.containers)\n            this.registerContainer(container);\n        return this;\n    }\n    /**\n     * Removes phrases that match the predicate given.\n     *\n     * @example\n     * ```typescript\n     * const customDataset = new DataSet<{ originalWord: string }>()\n     * \t.addAll(englishDataset)\n     * \t.removePhrasesIf((phrase) => phrase.metadata.originalWord === 'fuck');\n     * ```\n     * @param predicate - A predicate that determines whether or not a phrase should be removed.\n     * Return `true` to remove, `false` to keep.\n     */\n    removePhrasesIf(predicate) {\n        // Clear the internal state, then gradually rebuild it by adding the\n        // containers that should be kept.\n        this.patternCount = 0;\n        this.patternIdToPhraseContainer.clear();\n        const containers = this.containers.splice(0);\n        for (const container of containers) {\n            const remove = predicate(container);\n            if (!remove)\n                this.registerContainer(container);\n        }\n        return this;\n    }\n    /**\n     * Adds a phrase to this dataset.\n     *\n     * @example\n     * ```typescript\n     * const data = new DataSet<{ originalWord: string }>()\n     * \t.addPhrase((phrase) => phrase.setMetadata({ originalWord: 'fuck' })\n     * \t\t.addPattern(pattern`fuck`)\n     * \t\t.addPattern(pattern`f[?]ck`)\n     * \t\t.addWhitelistedTerm('Afck'))\n     * \t.build();\n     * ```\n     * @param fn - A function that takes a [[PhraseBuilder]], adds\n     * patterns/whitelisted terms/metadata to it, and returns it.\n     */\n    addPhrase(fn) {\n        const container = fn(new PhraseBuilder()).build();\n        this.registerContainer(container);\n        return this;\n    }\n    /**\n     * Retrieves the phrase metadata associated with a pattern and returns a\n     * copy of the match payload with said metadata attached to it.\n     *\n     * @example\n     * ```typescript\n     * const matches = matcher.getAllMatches(input);\n     * const matchesWithPhraseMetadata = matches.map((match) => dataset.getPayloadWithPhraseMetadata(match));\n     * // Now we can access the 'phraseMetadata' property:\n     * const phraseMetadata = matchesWithPhraseMetadata[0].phraseMetadata;\n     * ```\n     * @param payload - Original match payload.\n     */\n    getPayloadWithPhraseMetadata(payload) {\n        const offset = this.patternIdToPhraseContainer.get(payload.termId);\n        if (offset === undefined) {\n            throw new Error(`The pattern with ID ${payload.termId} does not exist in this dataset.`);\n        }\n        return {\n            ...payload,\n            phraseMetadata: this.containers[offset].metadata,\n        };\n    }\n    /**\n     * Returns the dataset in a format suitable for usage with the [[RegExpMatcher]].\n     *\n     * @example\n     * ```typescript\n     * // With the RegExpMatcher:\n     * const matcher = new RegExpMatcher({\n     * \t...dataset.build(),\n     * \t// additional options here\n     * });\n     * ```\n     */\n    build() {\n        return {\n            blacklistedTerms: (0, BlacklistedTerm_1.assignIncrementingIds)(this.containers.flatMap((p) => p.patterns)),\n            whitelistedTerms: this.containers.flatMap((p) => p.whitelistedTerms),\n        };\n    }\n    registerContainer(container) {\n        const offset = this.containers.push(container) - 1;\n        for (let i = 0, phraseId = this.patternCount; i < container.patterns.length; i++, phraseId++) {\n            this.patternIdToPhraseContainer.set(phraseId, offset);\n            this.patternCount++;\n        }\n    }\n}\nexports.DataSet = DataSet;\n/**\n * Builder for phrases.\n */\nclass PhraseBuilder {\n    constructor() {\n        this.patterns = [];\n        this.whitelistedTerms = [];\n    }\n    /**\n     * Associates a pattern with this phrase.\n     *\n     * @param pattern - Pattern to add.\n     */\n    addPattern(pattern) {\n        this.patterns.push(pattern);\n        return this;\n    }\n    /**\n     * Associates a whitelisted pattern with this phrase.\n     *\n     * @param term - Whitelisted term to add.\n     */\n    addWhitelistedTerm(term) {\n        this.whitelistedTerms.push(term);\n        return this;\n    }\n    /**\n     * Associates some metadata with this phrase.\n     *\n     * @param metadata - Metadata to use.\n     */\n    setMetadata(metadata) {\n        this.metadata = metadata;\n        return this;\n    }\n    /**\n     * Builds the phrase, returning a [[PhraseContainer]] for use with the\n     * [[DataSet]].\n     */\n    build() {\n        return {\n            patterns: this.patterns,\n            whitelistedTerms: this.whitelistedTerms,\n            metadata: this.metadata,\n        };\n    }\n}\nexports.PhraseBuilder = PhraseBuilder;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./censor/BuiltinStrategies\"), exports);\n__exportStar(require(\"./censor/TextCensor\"), exports);\n__exportStar(require(\"./dataset/DataSet\"), exports);\n__exportStar(require(\"./matcher/regexp/RegExpMatcher\"), exports);\n__exportStar(require(\"./matcher/BlacklistedTerm\"), exports);\n__exportStar(require(\"./matcher/MatchPayload\"), exports);\n__exportStar(require(\"./matcher/Matcher\"), exports);\n__exportStar(require(\"./pattern/Nodes\"), exports);\n__exportStar(require(\"./pattern/ParserError\"), exports);\n__exportStar(require(\"./pattern/Pattern\"), exports);\n__exportStar(require(\"./preset/english\"), exports);\n__exportStar(require(\"./transformer/collapse-duplicates\"), exports);\n__exportStar(require(\"./transformer/remap-characters\"), exports);\n__exportStar(require(\"./transformer/resolve-confusables\"), exports);\n__exportStar(require(\"./transformer/resolve-leetspeak\"), exports);\n__exportStar(require(\"./transformer/skip-non-alphabetic\"), exports);\n__exportStar(require(\"./transformer/to-ascii-lowercase\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assignIncrementingIds = void 0;\n/**\n * Assigns incrementing IDs to the patterns provided, starting with 0. It is\n * useful if you have a list of patterns to match against but don't care about\n * identifying which pattern matched.\n *\n * @example\n * ```typescript\n * const matcher = new RegExpMatcher({\n *  ...,\n *  blacklistedTerms: assignIncrementingIds([\n *      pattern`f?uck`,\n *      pattern`|shit|`,\n *  ]),\n * });\n * ```\n * @param patterns - List of parsed patterns.\n * @returns A list of blacklisted terms with valid IDs which can then be passed\n * to the [[RegExpMatcher]].\n */\nfunction assignIncrementingIds(patterns) {\n    let currentId = 0;\n    return patterns.map((pattern) => ({ id: currentId++, pattern }));\n}\nexports.assignIncrementingIds = assignIncrementingIds;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IntervalCollection = void 0;\nclass IntervalCollection {\n    constructor() {\n        this.dirty = false;\n        this.intervals = [];\n    }\n    insert(lowerBound, upperBound) {\n        this.intervals.push([lowerBound, upperBound]);\n        this.dirty = true;\n    }\n    query(lowerBound, upperBound) {\n        if (this.intervals.length === 0)\n            return false;\n        if (this.dirty) {\n            this.dirty = false;\n            // Sort by lower bound.\n            this.intervals.sort(\n            /* istanbul ignore next: not possible to write a robust test for this */\n            (a, b) => (a[0] < b[0] ? -1 : b[0] < a[0] ? 1 : 0));\n        }\n        for (const interval of this.intervals) {\n            // Since the intervals are sorted by lower bound, if we see an\n            // interval with a lower bound greater than the target, we can skip\n            // checking all the ones after it as it's impossible that they fully\n            // contain the target interval.\n            if (interval[0] > lowerBound)\n                break;\n            if (interval[0] <= lowerBound && upperBound <= interval[1])\n                return true;\n        }\n        return false;\n    }\n    values() {\n        return this.intervals.values();\n    }\n    [Symbol.iterator]() {\n        return this.values();\n    }\n}\nexports.IntervalCollection = IntervalCollection;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.compareMatchByPositionAndId = void 0;\nconst Interval_1 = require(\"../util/Interval\");\n/**\n * Compares two match payloads.\n *\n * If the first match payload's start index is less than the second's, `-1` is\n *   returned;\n * If the second match payload's start index is less than the first's, `1` is\n *   returned;\n * If the first match payload's end index is less than the second's, `-1` is\n *   returned;\n * If the second match payload's end index is less than the first's, `1` is\n *   returned;\n * If the first match payload's term ID is less than the second's, `-1` is\n *   returned;\n * If the first match payload's term ID is equal to the second's, `0` is\n *   returned;\n * Otherwise, `1` is returned.\n *\n * @param a - First match payload.\n * @param b - Second match payload.\n * @returns The result of the comparison: -1 if the first should sort lower than\n * the second, 0 if they are the same, and 1 if the second should sort lower\n * than the first.\n */\nfunction compareMatchByPositionAndId(a, b) {\n    const result = (0, Interval_1.compareIntervals)(a.startIndex, a.endIndex, b.startIndex, b.endIndex);\n    if (result !== 0)\n        return result;\n    return a.termId === b.termId ? 0 : a.termId < b.termId ? -1 : 1;\n}\nexports.compareMatchByPositionAndId = compareMatchByPositionAndId;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RegExpMatcher = void 0;\nconst Char_1 = require(\"../../util/Char\");\nconst Util_1 = require(\"../../pattern/Util\");\nconst TransformerSet_1 = require(\"../../transformer/TransformerSet\");\nconst CharacterIterator_1 = require(\"../../util/CharacterIterator\");\nconst IntervalCollection_1 = require(\"../IntervalCollection\");\nconst MatchPayload_1 = require(\"../MatchPayload\");\n/**\n * An implementation of the [[Matcher]] interface using regular expressions and\n * string searching methods.\n */\nclass RegExpMatcher {\n    /**\n     * Creates a new [[RegExpMatcher]] with the options given.\n     *\n     * @example\n     * ```typescript\n     * // Use the options provided by the English preset.\n     * const matcher = new RegExpMatcher({\n     * \t...englishDataset.build(),\n     * \t...englishRecommendedTransformers,\n     * });\n     * ```\n     * @example\n     * ```typescript\n     * // Simple matcher that only has blacklisted patterns.\n     * const matcher = new RegExpMatcher({\n     *  blacklistedTerms: assignIncrementingIds([\n     *      pattern`fuck`,\n     *      pattern`f?uck`, // wildcards (?)\n     *      pattern`bitch`,\n     *      pattern`b[i]tch` // optionals ([i] matches either \"i\" or \"\")\n     *  ]),\n     * });\n     *\n     * // Check whether some string matches any of the patterns.\n     * const doesMatch = matcher.hasMatch('fuck you bitch');\n     * ```\n     * @example\n     * ```typescript\n     * // A more advanced example, with transformers and whitelisted terms.\n     * const matcher = new RegExpMatcher({\n     *  blacklistedTerms: [\n     *      { id: 1, pattern: pattern`penis` },\n     *      { id: 2, pattern: pattern`fuck` },\n     *  ],\n     *  whitelistedTerms: ['pen is'],\n     *  blacklistMatcherTransformers: [\n     *      resolveConfusablesTransformer(), // '🅰' => 'a'\n     *      resolveLeetSpeakTransformer(), // '$' => 's'\n     *      foldAsciiCharCaseTransformer(), // case insensitive matching\n     *      skipNonAlphabeticTransformer(), // 'f.u...c.k' => 'fuck'\n     *      collapseDuplicatesTransformer(), // 'aaaa' => 'a'\n     *  ],\n     * });\n     *\n     * // Output all matches.\n     * console.log(matcher.getAllMatches('fu.....uuuuCK the pen is mightier than the sword!'));\n     * ```\n     * @param options - Options to use.\n     */\n    constructor({ blacklistedTerms, whitelistedTerms = [], blacklistMatcherTransformers = [], whitelistMatcherTransformers = [], }) {\n        this.blacklistedTerms = this.compileTerms(blacklistedTerms);\n        this.validateWhitelistedTerms(whitelistedTerms);\n        this.whitelistedTerms = whitelistedTerms;\n        this.blacklistMatcherTransformers = new TransformerSet_1.TransformerSet(blacklistMatcherTransformers);\n        this.whitelistMatcherTransformers = new TransformerSet_1.TransformerSet(whitelistMatcherTransformers);\n    }\n    getAllMatches(input, sorted = false) {\n        const whitelistedIntervals = this.getWhitelistedIntervals(input);\n        const [transformedToOrigIndex, transformed] = this.applyTransformers(input, this.blacklistMatcherTransformers);\n        const matches = [];\n        for (const blacklistedTerm of this.blacklistedTerms) {\n            for (const match of transformed.matchAll(blacklistedTerm.regExp)) {\n                const origStartIndex = transformedToOrigIndex[match.index];\n                let origEndIndex = transformedToOrigIndex[match.index + match[0].length - 1];\n                // End index is (unfortunately) inclusive, so adjust as necessary.\n                if (origEndIndex < input.length - 1 && // not the last character\n                    (0, Char_1.isHighSurrogate)(input.charCodeAt(origEndIndex)) && // character is a high surrogate\n                    (0, Char_1.isLowSurrogate)(input.charCodeAt(origEndIndex + 1)) // next character is a low surrogate\n                ) {\n                    origEndIndex++;\n                }\n                if (!whitelistedIntervals.query(origStartIndex, origEndIndex)) {\n                    matches.push({\n                        termId: blacklistedTerm.id,\n                        startIndex: origStartIndex,\n                        endIndex: origEndIndex,\n                        matchLength: [...match[0]].length,\n                    });\n                }\n            }\n        }\n        if (sorted)\n            matches.sort(MatchPayload_1.compareMatchByPositionAndId);\n        return matches;\n    }\n    hasMatch(input) {\n        const whitelistedIntervals = this.getWhitelistedIntervals(input);\n        const [transformedToOrigIndex, transformed] = this.applyTransformers(input, this.blacklistMatcherTransformers);\n        for (const blacklistedTerm of this.blacklistedTerms) {\n            for (const match of transformed.matchAll(blacklistedTerm.regExp)) {\n                const origStartIndex = transformedToOrigIndex[match.index];\n                let origEndIndex = transformedToOrigIndex[match.index + match[0].length - 1];\n                // End index is (unfortunately) inclusive, so adjust as necessary.\n                if (origEndIndex < input.length - 1 && // not the last character\n                    (0, Char_1.isHighSurrogate)(input.charCodeAt(origEndIndex)) && // character is a high surrogate\n                    (0, Char_1.isLowSurrogate)(input.charCodeAt(origEndIndex + 1)) // next character is a low surrogate\n                ) {\n                    origEndIndex++;\n                }\n                if (!whitelistedIntervals.query(origStartIndex, origEndIndex))\n                    return true;\n            }\n        }\n        return false;\n    }\n    getWhitelistedIntervals(input) {\n        const matches = new IntervalCollection_1.IntervalCollection();\n        const [transformedToOrigIndex, transformed] = this.applyTransformers(input, this.whitelistMatcherTransformers);\n        for (const whitelistedTerm of this.whitelistedTerms) {\n            let lastEnd = 0;\n            for (let startIndex = transformed.indexOf(whitelistedTerm, lastEnd); startIndex !== -1; startIndex = transformed.indexOf(whitelistedTerm, lastEnd)) {\n                let origEndIndex = transformedToOrigIndex[startIndex + whitelistedTerm.length - 1];\n                // End index is (unfortunately) inclusive, so adjust as necessary.\n                if (origEndIndex < input.length - 1 && // not the last character\n                    (0, Char_1.isHighSurrogate)(input.charCodeAt(origEndIndex)) && // character is a high surrogate\n                    (0, Char_1.isLowSurrogate)(input.charCodeAt(origEndIndex + 1)) // next character is a low surrogate\n                ) {\n                    origEndIndex++;\n                }\n                matches.insert(transformedToOrigIndex[startIndex], origEndIndex);\n                lastEnd = startIndex + whitelistedTerm.length;\n            }\n        }\n        return matches;\n    }\n    applyTransformers(input, transformers) {\n        const transformedToOrigIndex = [];\n        let transformed = '';\n        const iter = new CharacterIterator_1.CharacterIterator(input);\n        for (const char of iter) {\n            const transformedChar = transformers.applyTo(char);\n            if (transformedChar !== undefined) {\n                transformed += String.fromCodePoint(transformedChar);\n                while (transformedToOrigIndex.length < transformed.length)\n                    transformedToOrigIndex.push(iter.position);\n            }\n        }\n        transformers.resetAll();\n        return [transformedToOrigIndex, transformed];\n    }\n    compileTerms(terms) {\n        const compiled = [];\n        const seenIds = new Set();\n        for (const term of terms) {\n            if (seenIds.has(term.id))\n                throw new Error(`Duplicate blacklisted term ID ${term.id}.`);\n            if ((0, Util_1.potentiallyMatchesEmptyString)(term.pattern)) {\n                throw new Error(`Pattern with ID ${term.id} potentially matches empty string; this is unsupported.`);\n            }\n            compiled.push({\n                id: term.id,\n                regExp: (0, Util_1.compilePatternToRegExp)(term.pattern),\n            });\n            seenIds.add(term.id);\n        }\n        return compiled;\n    }\n    validateWhitelistedTerms(whitelist) {\n        if (whitelist.some((term) => term.length === 0)) {\n            throw new Error('Whitelisted term set contains empty string; this is unsupported.');\n        }\n    }\n}\nexports.RegExpMatcher = RegExpMatcher;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SyntaxKind = void 0;\n/**\n * An enumeration of the kinds of nodes there are.\n */\nvar SyntaxKind;\n(function (SyntaxKind) {\n    SyntaxKind[SyntaxKind[\"Optional\"] = 0] = \"Optional\";\n    SyntaxKind[SyntaxKind[\"Wildcard\"] = 1] = \"Wildcard\";\n    SyntaxKind[SyntaxKind[\"Literal\"] = 2] = \"Literal\";\n    SyntaxKind[SyntaxKind[\"BoundaryAssertion\"] = 3] = \"BoundaryAssertion\";\n})(SyntaxKind || (exports.SyntaxKind = SyntaxKind = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Parser = void 0;\nconst Char_1 = require(\"../util/Char\");\nconst CharacterIterator_1 = require(\"../util/CharacterIterator\");\nconst Nodes_1 = require(\"./Nodes\");\nconst ParserError_1 = require(\"./ParserError\");\nconst supportsEscaping = [\n    92 /* CharacterCode.Backslash */,\n    91 /* CharacterCode.LeftSquareBracket */,\n    93 /* CharacterCode.RightSquareBracket */,\n    63 /* CharacterCode.QuestionMark */,\n    124 /* CharacterCode.VerticalBar */,\n];\nconst supportsEscapingList = supportsEscaping.map((char) => `'${String.fromCodePoint(char)}'`).join(', ');\nconst eof = -1;\nclass Parser {\n    constructor() {\n        this.input = '';\n        this.line = 1;\n        this.column = 1;\n        this.position = 0;\n        this.lastColumn = 1;\n        this.lastWidth = 0;\n    }\n    parse(input) {\n        this.setInput(input);\n        const nodes = [];\n        const firstNode = this.nextNode();\n        const requireWordBoundaryAtStart = firstNode?.kind === Nodes_1.SyntaxKind.BoundaryAssertion;\n        if (firstNode && !requireWordBoundaryAtStart)\n            nodes.push(firstNode);\n        let requireWordBoundaryAtEnd = false;\n        while (!this.done) {\n            const pos = this.mark();\n            const node = this.nextNode();\n            if (node.kind !== Nodes_1.SyntaxKind.BoundaryAssertion) {\n                nodes.push(node);\n                continue;\n            }\n            // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n            if (!this.done) {\n                this.reportError('Boundary assertions are not supported in this position; they are only allowed at the start / end of the pattern.', pos);\n            }\n            requireWordBoundaryAtEnd = true;\n        }\n        return { requireWordBoundaryAtStart, requireWordBoundaryAtEnd, nodes };\n    }\n    setInput(input) {\n        this.input = input;\n        this.line = 1;\n        this.column = 1;\n        this.position = 0;\n        this.lastColumn = 1;\n        this.lastWidth = 0;\n        return this;\n    }\n    nextNode() {\n        switch (this.peek()) {\n            case eof:\n                return undefined;\n            case 91 /* CharacterCode.LeftSquareBracket */:\n                return this.parseOptional();\n            case 93 /* CharacterCode.RightSquareBracket */:\n                this.reportError(`Unexpected ']' with no corresponding '['.`);\n            // eslint-disable-next-line no-fallthrough\n            case 63 /* CharacterCode.QuestionMark */:\n                return this.parseWildcard();\n            case 124 /* CharacterCode.VerticalBar */:\n                return this.parseBoundaryAssertion();\n            default:\n                return this.parseLiteral();\n        }\n    }\n    get done() {\n        return this.position >= this.input.length;\n    }\n    // Optional ::= '[' Wildcard | Text ']'\n    parseOptional() {\n        const preOpenBracketPos = this.mark();\n        this.next(); // '['\n        const postOpenBracketPos = this.mark();\n        if (this.done)\n            this.reportError(\"Unexpected unclosed '['.\", preOpenBracketPos);\n        if (this.accept('['))\n            this.reportError('Unexpected nested optional node.', postOpenBracketPos);\n        const childNode = this.nextNode();\n        if (childNode.kind === Nodes_1.SyntaxKind.BoundaryAssertion) {\n            this.reportError('Boundary assertions are not supported in this position; they are only allowed at the start / end of the pattern.', postOpenBracketPos);\n        }\n        if (!this.accept(']'))\n            this.reportError(\"Unexpected unclosed '['.\");\n        return { kind: Nodes_1.SyntaxKind.Optional, childNode: childNode };\n    }\n    // Wildcard ::= '?'\n    parseWildcard() {\n        this.next(); // '?'\n        return { kind: Nodes_1.SyntaxKind.Wildcard };\n    }\n    // BoundaryAssertion ::= '|'\n    parseBoundaryAssertion() {\n        this.next(); // '|'\n        return { kind: Nodes_1.SyntaxKind.BoundaryAssertion };\n    }\n    // Literal              ::= (NON_SPECIAL | '\\' SUPPORTS_ESCAPING)+\n    // NON_SPECIAL         ::= _any character other than '\\', '?', '[', ']', or '|'_\n    // SUPPORTS_ESCAPING   ::= '\\' | '[' | ']' | '?' | '|'\n    parseLiteral() {\n        const chars = [];\n        while (!this.done) {\n            if (this.accept('[]?|')) {\n                this.backup();\n                break;\n            }\n            const next = this.next();\n            if (next === 92 /* CharacterCode.Backslash */) {\n                // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n                if (this.done) {\n                    this.backup();\n                    this.reportError('Unexpected trailing backslash.');\n                }\n                // Can we escape the next character?\n                const escaped = this.next();\n                if (!supportsEscaping.includes(escaped)) {\n                    const repr = String.fromCodePoint(escaped);\n                    this.backup();\n                    this.reportError(`Cannot escape character '${repr}'; the only characters that can be escaped are the following: ${supportsEscapingList}.`);\n                }\n                chars.push(escaped);\n            }\n            else {\n                chars.push(next);\n            }\n        }\n        return { kind: Nodes_1.SyntaxKind.Literal, chars };\n    }\n    reportError(message, { line = this.line, column = this.column } = {}) {\n        throw new ParserError_1.ParserError(message, line, column);\n    }\n    // Marks the current position.\n    mark() {\n        return { line: this.line, column: this.column };\n    }\n    // Accepts any code point in the charset provided. Iff accepted, the character is consumed.\n    accept(charset) {\n        const next = this.next();\n        const iter = new CharacterIterator_1.CharacterIterator(charset);\n        for (const char of iter) {\n            if (char === next)\n                return true;\n        }\n        this.backup();\n        return false;\n    }\n    // Reads one code point from the input, without consuming it.\n    peek() {\n        const next = this.next();\n        this.backup();\n        return next;\n    }\n    // Consumes one code point from the input.\n    next() {\n        if (this.done)\n            return eof;\n        const char = this.input.charCodeAt(this.position++);\n        this.lastWidth = 1;\n        if (char === 10 /* CharacterCode.Newline */) {\n            this.lastColumn = this.column;\n            this.column = 1;\n            this.line++;\n            return char;\n        }\n        this.lastColumn = this.column++;\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n        if (!(0, Char_1.isHighSurrogate)(char) || this.done)\n            return char;\n        // Do we have a surrogate pair?\n        const next = this.input.charCodeAt(this.position);\n        if ((0, Char_1.isLowSurrogate)(next)) {\n            this.position++;\n            this.lastWidth++;\n            return (0, Char_1.convertSurrogatePairToCodePoint)(char, next);\n        }\n        return char;\n    }\n    // Steps back one character; can only be called once per call to next().\n    backup() {\n        this.position -= this.lastWidth;\n        this.column = this.lastColumn;\n        // Adjust line count if needed.\n        if (this.lastWidth === 1 && this.input.charCodeAt(this.position) === 10 /* CharacterCode.Newline */) {\n            this.line--;\n        }\n    }\n}\nexports.Parser = Parser;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ParserError = void 0;\n/**\n * Custom error thrown by the parser when syntactical errors are detected.\n */\nclass ParserError extends Error {\n    constructor(message, line, column) {\n        super(`${line}:${column}: ${message}`);\n        this.name = 'ParserError';\n        this.line = line;\n        this.column = column;\n    }\n}\nexports.ParserError = ParserError;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseRawPattern = exports.pattern = void 0;\nconst Parser_1 = require(\"./Parser\");\nconst parser = new Parser_1.Parser();\n/**\n * Parses a pattern, which matches a set of strings; see the `Syntax` section\n * for details. This function is intended to be called as a [template\n * tag](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#tagged_templates).\n *\n * **Syntax**\n *\n * Generally speaking, in patterns, characters are interpreted literally. That\n * is, they match exactly what they are: `a` matches an `a`, `b` matches a `b`,\n * `;` matches a `;`, and so on.\n *\n * However, there are several constructs that have special meaning:\n *\n * - `[expr]` matches either the empty string or `expr` (an **optional\n *   expression**). `expr` may be a sequence of literal characters or a wildcard\n *   (see below).\n * - `?` matches any character (a **wildcard**).\n * - A `|` at the start or end of the pattern asserts position at a word\n *   boundary (a **word boundary assertion**). If `|` is at the start, it\n *   ensures that the match either starts at the start of the string or a non-\n *   word character preceding it; if it is at the end, it ensures that the match\n *   either ends at the end of the string or a non-word character follows it.\n *\n *   A word character is an lower-case or upper-case ASCII alphabet character or\n *   an ASCII digit.\n * - In a literal, a backslash may be used to **escape** one of the\n *   meta-characters mentioned above so that it does match literally: `\\\\[`\n *   matches `[`, and does not mark the start of an optional expression.\n *\n *   **Note about escapes**\n *\n *   As this function operates on raw strings, double-escaping backslashes is\n *   not necessary:\n *\n *   ```typescript\n *   // Use this:\n *   const parsed = pattern`hello \\[`;\n *   // Don't use this:\n *   const parsed = pattern`hello \\\\[`;\n *   ```\n *\n * **Examples**\n *\n * - `baz` matches `baz` exactly.\n *\n * - `b\\[ar` matches `b[ar` exactly.\n *\n * - `d?ude` matches `d`, then any character, then `ude`. All of the following\n *   strings are matched by this pattern:\n *   - `dyude`\n *   - `d;ude`\n *   - `d!ude`\n *\n * - `h[?]ello` matches either `h`, any character, then `ello` or the literal\n *   string `hello`. The set of strings it matches is equal to the union of the\n *   set of strings that the two patterns `hello` and `h?ello` match. All of the\n *   following strings are matched by this pattern:\n *   - `hello`\n *   - `h!ello`\n *   - `h;ello`\n *\n * - `|foobar|` asserts position at a word boundary, matches the literal string\n *   `foobar`, and asserts position at a word boundary:\n *   - `foobar` matches, as the start and end of string count as word\n *     boundaries;\n *   - `yofoobar` does _not_ match, as `f` is immediately preceded by a word\n *     character;\n *   - `hello foobar bye` matches, as `f` is immediately preceded by a non-word\n *     character, and `r` is immediately followed by a non-word character.\n *\n * **Grammar**\n *\n * ```\n * Pattern  ::= '['? Atom* ']'?\n * Atom     ::= Literal | Wildcard | Optional\n * Optional ::= '[' Literal | Wildcard ']'\n * Literal  ::= (NON_SPECIAL | '\\' SUPPORTS_ESCAPING)+\n *\n * NON_SPECIAL       ::= _any character other than '\\', '?', '[', ']', or '|'_\n * SUPPORTS_ESCAPING ::= '\\' | '[' | ']' | '?' | '|'\n * ```\n *\n * @example\n * ```typescript\n * const parsed = pattern`hello?`; // match \"hello\", then any character\n * ```\n * @example\n * ```typescript\n * const parsed = pattern`w[o]rld`; // match \"wrld\" or \"world\"\n * ```\n * @example\n * ```typescript\n * const parsed = pattern`my initials are \\[??\\]`; // match \"my initials are [\", then any two characters, then a \"]\"\n * ```\n * @returns The parsed pattern, which can then be used with the\n * [[RegExpMatcher]].\n * @throws [[ParserError]] if a syntactical error was detected while parsing the\n * pattern.\n * @see [[parseRawPattern]] if you want to parse a string into a pattern without\n * using a template tag.\n */\nfunction pattern(strings, ...expressions) {\n    let result = strings.raw[0];\n    for (const [i, expression] of expressions.entries()) {\n        result += expression;\n        result += strings.raw[i + 1];\n    }\n    return parser.parse(result);\n}\nexports.pattern = pattern;\n/**\n * Parses a string as a pattern directly.\n *\n * **Note**\n *\n * It is recommended to use the [[pattern | pattern template tag]] instead of\n * this function for literal patterns (i.e. ones without dynamic content).\n *\n * @param pattern - The string to parse.\n * @throws [[ParserError]] if a syntactical error was detected while parsing the\n * pattern.\n * @returns The parsed pattern, which can then be used with the\n * [[RegExpMatcher]].\n */\nfunction parseRawPattern(pattern) {\n    return parser.parse(pattern);\n}\nexports.parseRawPattern = parseRawPattern;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRegExpStringForNode = exports.compilePatternToRegExp = exports.potentiallyMatchesEmptyString = void 0;\nconst Nodes_1 = require(\"./Nodes\");\nfunction potentiallyMatchesEmptyString(pattern) {\n    return pattern.nodes.every((node) => node.kind === Nodes_1.SyntaxKind.Optional);\n}\nexports.potentiallyMatchesEmptyString = potentiallyMatchesEmptyString;\nfunction compilePatternToRegExp(pattern) {\n    let regExpStr = '';\n    if (pattern.requireWordBoundaryAtStart)\n        regExpStr += '\\\\b';\n    for (const node of pattern.nodes)\n        regExpStr += getRegExpStringForNode(node);\n    if (pattern.requireWordBoundaryAtEnd)\n        regExpStr += `\\\\b`;\n    return new RegExp(regExpStr, 'gs');\n}\nexports.compilePatternToRegExp = compilePatternToRegExp;\nconst regExpSpecialChars = ['[', '.', '*', '+', '?', '^', '$', '{', '}', '(', ')', '|', '[', '\\\\', ']'].map((str) => str.charCodeAt(0));\nfunction getRegExpStringForNode(node) {\n    switch (node.kind) {\n        case Nodes_1.SyntaxKind.Literal: {\n            let str = '';\n            for (const char of node.chars) {\n                if (regExpSpecialChars.includes(char))\n                    str += '\\\\';\n                str += String.fromCodePoint(char);\n            }\n            return str;\n        }\n        case Nodes_1.SyntaxKind.Optional:\n            return `(?:${getRegExpStringForNode(node.childNode)})?`;\n        case Nodes_1.SyntaxKind.Wildcard:\n            return `.`;\n    }\n}\nexports.getRegExpStringForNode = getRegExpStringForNode;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.englishDataset = exports.englishRecommendedTransformers = exports.englishRecommendedWhitelistMatcherTransformers = exports.englishRecommendedBlacklistMatcherTransformers = void 0;\nconst DataSet_1 = require(\"../dataset/DataSet\");\nconst Pattern_1 = require(\"../pattern/Pattern\");\nconst collapse_duplicates_1 = require(\"../transformer/collapse-duplicates\");\nconst resolve_confusables_1 = require(\"../transformer/resolve-confusables\");\nconst resolve_leetspeak_1 = require(\"../transformer/resolve-leetspeak\");\nconst to_ascii_lowercase_1 = require(\"../transformer/to-ascii-lowercase\");\n/**\n * A set of transformers to be used when matching blacklisted patterns with the\n * [[englishDataset | english word dataset]].\n */\nexports.englishRecommendedBlacklistMatcherTransformers = [\n    (0, resolve_confusables_1.resolveConfusablesTransformer)(),\n    (0, resolve_leetspeak_1.resolveLeetSpeakTransformer)(),\n    (0, to_ascii_lowercase_1.toAsciiLowerCaseTransformer)(),\n    // See #23 and #46.\n    // skipNonAlphabeticTransformer(),\n    (0, collapse_duplicates_1.collapseDuplicatesTransformer)({\n        defaultThreshold: 1,\n        customThresholds: new Map([\n            ['b', 2],\n            ['e', 2],\n            ['o', 2],\n            ['l', 2],\n            ['s', 2],\n            ['g', 2], // ni_gg_er\n        ]),\n    }),\n];\n/**\n * A set of transformers to be used when matching whitelisted terms with the\n * [[englishDataset | english word dataset]].\n */\nexports.englishRecommendedWhitelistMatcherTransformers = [\n    (0, to_ascii_lowercase_1.toAsciiLowerCaseTransformer)(),\n    (0, collapse_duplicates_1.collapseDuplicatesTransformer)({\n        defaultThreshold: Number.POSITIVE_INFINITY,\n        customThresholds: new Map([[' ', 1]]), // collapse spaces\n    }),\n];\n/**\n * Recommended transformers to be used with the [[englishDataset | english word\n * dataset]] and the [[RegExpMatcher]].\n */\nexports.englishRecommendedTransformers = {\n    blacklistMatcherTransformers: exports.englishRecommendedBlacklistMatcherTransformers,\n    whitelistMatcherTransformers: exports.englishRecommendedWhitelistMatcherTransformers,\n};\n/**\n * A dataset of profane English words.\n *\n * @example\n * ```typescript\n * const matcher = new RegExpMatcher({\n * \t...englishDataset.build(),\n * \t...englishRecommendedTransformers,\n * });\n * ```\n * @example\n * ```typescript\n * // Extending the data-set by adding a new word and removing an existing one.\n * const myDataset = new DataSet()\n * \t.addAll(englishDataset)\n * \t.removePhrasesIf((phrase) => phrase.metadata.originalWord === 'vagina')\n * \t.addPhrase((phrase) => phrase.addPattern(pattern`|balls|`));\n * ```\n * @copyright\n * The words are taken from the [cuss](https://github.com/words/cuss) project,\n * with some modifications.\n *\n * ```text\n * (The MIT License)\n *\n * Copyright (c) 2016 Titus Wormer <tituswormer@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * 'Software'), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n * ```\n */\nexports.englishDataset = new DataSet_1.DataSet()\n    .addPhrase((phrase) => phrase.setMetadata({ originalWord: 'abo' }).addPattern((0, Pattern_1.pattern) `|ab[b]o[s]|`))\n    .addPhrase((phrase) => phrase.setMetadata({ originalWord: 'abeed' }).addPattern((0, Pattern_1.pattern) `ab[b]eed`))\n    .addPhrase((phrase) => phrase.setMetadata({ originalWord: 'africoon' }).addPattern((0, Pattern_1.pattern) `africoon`))\n    .addPhrase((phrase) => phrase\n    .setMetadata({ originalWord: 'anal' })\n    .addPattern((0, Pattern_1.pattern) `|anal`)\n    .addWhitelistedTerm('analabos')\n    .addWhitelistedTerm('analagous')\n    .addWhitelistedTerm('analav')\n    .addWhitelistedTerm('analy')\n    .addWhitelistedTerm('analog')\n    .addWhitelistedTerm('an al')\n    .addPattern((0, Pattern_1.pattern) `danal`)\n    .addPattern((0, Pattern_1.pattern) `eanal`)\n    .addPattern((0, Pattern_1.pattern) `fanal`)\n    .addWhitelistedTerm('fan al')\n    .addPattern((0, Pattern_1.pattern) `ganal`)\n    .addWhitelistedTerm('gan al')\n    .addPattern((0, Pattern_1.pattern) `ianal`)\n    .addWhitelistedTerm('ian al')\n    .addPattern((0, Pattern_1.pattern) `janal`)\n    .addWhitelistedTerm('trojan al')\n    .addPattern((0, Pattern_1.pattern) `kanal`)\n    .addPattern((0, Pattern_1.pattern) `lanal`)\n    .addWhitelistedTerm('lan al')\n    .addPattern((0, Pattern_1.pattern) `lanal`)\n    .addWhitelistedTerm('lan al')\n    .addPattern((0, Pattern_1.pattern) `oanal|`)\n    .addPattern((0, Pattern_1.pattern) `panal`)\n    .addWhitelistedTerm('pan al')\n    .addPattern((0, Pattern_1.pattern) `qanal`)\n    .addPattern((0, Pattern_1.pattern) `ranal`)\n    .addPattern((0, Pattern_1.pattern) `sanal`)\n    .addPattern((0, Pattern_1.pattern) `tanal`)\n    .addWhitelistedTerm('tan al')\n    .addPattern((0, Pattern_1.pattern) `uanal`)\n    .addWhitelistedTerm('uan al')\n    .addPattern((0, Pattern_1.pattern) `vanal`)\n    .addWhitelistedTerm('van al')\n    .addPattern((0, Pattern_1.pattern) `wanal`)\n    .addPattern((0, Pattern_1.pattern) `xanal`)\n    .addWhitelistedTerm('texan al')\n    .addPattern((0, Pattern_1.pattern) `yanal`)\n    .addPattern((0, Pattern_1.pattern) `zanal`))\n    .addPhrase((phrase) => phrase\n    .setMetadata({ originalWord: 'anus' })\n    .addPattern((0, Pattern_1.pattern) `anus`)\n    .addWhitelistedTerm('an us')\n    .addWhitelistedTerm('tetanus')\n    .addWhitelistedTerm('uranus')\n    .addWhitelistedTerm('janus')\n    .addWhitelistedTerm('manus'))\n    .addPhrase((phrase) => phrase.setMetadata({ originalWord: 'arabush' }).addPattern((0, Pattern_1.pattern) `arab[b]ush`))\n    .addPhrase((phrase) => phrase\n    .setMetadata({ originalWord: 'arse' })\n    .addPattern((0, Pattern_1.pattern) `|ars[s]e`)\n    .addWhitelistedTerm('arsen'))\n    .addPhrase((phrase) => phrase\n    .setMetadata({ originalWord: 'ass' })\n    .addPattern((0, Pattern_1.pattern) `|ass`)\n    .addWhitelistedTerm('assa')\n    .addWhitelistedTerm('assem')\n    .addWhitelistedTerm('assen')\n    .addWhitelistedTerm('asser')\n    .addWhitelistedTerm('asset')\n    .addWhitelistedTerm('assev')\n    .addWhitelistedTerm('assi')\n    .addWhitelistedTerm('assoc')\n    .addWhitelistedTerm('assoi')\n    .addWhitelistedTerm('assu'))\n    .addPhrase((phrase) => phrase.setMetadata({ originalWord: 'bastard' }).addPattern((0, Pattern_1.pattern) `bas[s]tard`))\n    .addPhrase((phrase) => phrase.setMetadata({ originalWord: 'bestiality' }).addPattern((0, Pattern_1.pattern) `be[e][a]s[s]tial`))\n    .addPhrase((phrase) => phrase\n    .setMetadata({ originalWord: 'bitch' })\n    .addPattern((0, Pattern_1.pattern) `bitch`)\n    .addPattern((0, Pattern_1.pattern) `bich|`))\n    .addPhrase((phrase) => phrase.setMetadata({ originalWord: 'blowjob' }).addPattern((0, Pattern_1.pattern) `b[b]l[l][o]wj[o]b`))\n    .addPhrase((phrase) => phrase.setMetadata({ originalWord: 'bollocks' }).addPattern((0, Pattern_1.pattern) `bol[l]ock`))\n    .addPhrase((phrase) => phrase.setMetadata({ originalWord: 'boob' }).addPattern((0, Pattern_1.pattern) `boob`))\n    .addPhrase((phrase) => phrase\n    .setMetadata({ originalWord: 'boonga' })\n    .addPattern((0, Pattern_1.pattern) `boonga`)\n    .addWhitelistedTerm('baboon ga'))\n    .addPhrase((phrase) => phrase.setMetadata({ originalWord: 'buttplug' }).addPattern((0, Pattern_1.pattern) `buttplug`))\n    .addPhrase((phrase) => phrase.setMetadata({ originalWord: 'chingchong' }).addPattern((0, Pattern_1.pattern) `chingchong`))\n    .addPhrase((phrase) => phrase\n    .setMetadata({ originalWord: 'chink' })\n    .addPattern((0, Pattern_1.pattern) `chink`)\n    .addWhitelistedTerm('chin k'))\n    .addPhrase((phrase) => phrase\n    .setMetadata({ originalWord: 'cock' })\n    .addPattern((0, Pattern_1.pattern) `|cock|`)\n    .addPattern((0, Pattern_1.pattern) `|cocks`)\n    .addPattern((0, Pattern_1.pattern) `|cockp`)\n    .addPattern((0, Pattern_1.pattern) `|cocke[e]|`)\n    .addWhitelistedTerm('cockney'))\n    .addPhrase((phrase) => phrase\n    .setMetadata({ originalWord: 'cuck' })\n    .addPattern((0, Pattern_1.pattern) `cuck`)\n    .addWhitelistedTerm('cuckoo'))\n    .addPhrase((phrase) => phrase\n    .setMetadata({ originalWord: 'cum' })\n    .addPattern((0, Pattern_1.pattern) `|cum`)\n    .addWhitelistedTerm('cumu')\n    .addWhitelistedTerm('cumb'))\n    .addPhrase((phrase) => phrase\n    .setMetadata({ originalWord: 'cunt' })\n    .addPattern((0, Pattern_1.pattern) `|cunt`)\n    .addPattern((0, Pattern_1.pattern) `cunt|`))\n    .addPhrase((phrase) => phrase\n    .setMetadata({ originalWord: 'deepthroat' })\n    .addPattern((0, Pattern_1.pattern) `deepthro[o]at`)\n    .addPattern((0, Pattern_1.pattern) `deepthro[o]t`))\n    .addPhrase((phrase) => phrase\n    .setMetadata({ originalWord: 'dick' })\n    .addPattern((0, Pattern_1.pattern) `|dck|`)\n    .addPattern((0, Pattern_1.pattern) `dick`)\n    .addWhitelistedTerm('benedick')\n    .addWhitelistedTerm('dickens'))\n    .addPhrase((phrase) => phrase.setMetadata({ originalWord: 'dildo' }).addPattern((0, Pattern_1.pattern) `dildo`))\n    .addPhrase((phrase) => phrase.setMetadata({ originalWord: 'doggystyle' }).addPattern((0, Pattern_1.pattern) `d[o]g[g]ys[s]t[y]l[l]`))\n    .addPhrase((phrase) => phrase.setMetadata({ originalWord: 'double penetration' }).addPattern((0, Pattern_1.pattern) `double penetra`))\n    .addPhrase((phrase) => phrase\n    .setMetadata({ originalWord: 'dyke' })\n    .addPattern((0, Pattern_1.pattern) `dyke`)\n    .addWhitelistedTerm('van dyke'))\n    .addPhrase((phrase) => phrase\n    .setMetadata({ originalWord: 'ejaculate' })\n    .addPattern((0, Pattern_1.pattern) `e[e]jacul`)\n    .addPattern((0, Pattern_1.pattern) `e[e]jakul`)\n    .addPattern((0, Pattern_1.pattern) `e[e]acul[l]ate`))\n    .addPhrase((phrase) => phrase\n    .setMetadata({ originalWord: 'fag' })\n    .addPattern((0, Pattern_1.pattern) `|fag`)\n    .addPattern((0, Pattern_1.pattern) `fggot`))\n    .addPhrase((phrase) => phrase.setMetadata({ originalWord: 'felch' }).addPattern((0, Pattern_1.pattern) `fe[e]l[l]ch`))\n    .addPhrase((phrase) => phrase.setMetadata({ originalWord: 'fellatio' }).addPattern((0, Pattern_1.pattern) `f[e][e]llat`))\n    .addPhrase((phrase) => phrase.setMetadata({ originalWord: 'finger bang' }).addPattern((0, Pattern_1.pattern) `fingerbang`))\n    .addPhrase((phrase) => phrase.setMetadata({ originalWord: 'fisting' }).addPattern((0, Pattern_1.pattern) `fistin`))\n    .addPhrase((phrase) => phrase\n    .setMetadata({ originalWord: 'fuck' })\n    .addPattern((0, Pattern_1.pattern) `f[?]ck`)\n    .addPattern((0, Pattern_1.pattern) `|fk`)\n    .addPattern((0, Pattern_1.pattern) `|fu|`)\n    .addPattern((0, Pattern_1.pattern) `|fuk`)\n    .addWhitelistedTerm('fickle')\n    .addWhitelistedTerm('kung-fu')\n    .addWhitelistedTerm('kung fu'))\n    .addPhrase((phrase) => phrase.setMetadata({ originalWord: 'gangbang' }).addPattern((0, Pattern_1.pattern) `g[?]ngbang`))\n    .addPhrase((phrase) => phrase.setMetadata({ originalWord: 'handjob' }).addPattern((0, Pattern_1.pattern) `h[?]ndjob`))\n    .addPhrase((phrase) => phrase.setMetadata({ originalWord: 'hentai' }).addPattern((0, Pattern_1.pattern) `h[e][e]ntai`))\n    .addPhrase((phrase) => phrase.setMetadata({ originalWord: 'hooker' }).addPattern((0, Pattern_1.pattern) `hooker`))\n    .addPhrase((phrase) => phrase.setMetadata({ originalWord: 'incest' }).addPattern((0, Pattern_1.pattern) `incest`))\n    .addPhrase((phrase) => phrase.setMetadata({ originalWord: 'jerk off' }).addPattern((0, Pattern_1.pattern) `jerkoff`))\n    .addPhrase((phrase) => phrase.setMetadata({ originalWord: 'jizz' }).addPattern((0, Pattern_1.pattern) `jizz`))\n    .addPhrase((phrase) => phrase.setMetadata({ originalWord: 'kike' }).addPattern((0, Pattern_1.pattern) `kike`))\n    .addPhrase((phrase) => phrase.setMetadata({ originalWord: 'lubejob' }).addPattern((0, Pattern_1.pattern) `lubejob`))\n    .addPhrase((phrase) => phrase\n    .setMetadata({ originalWord: 'masturbate' })\n    .addPattern((0, Pattern_1.pattern) `m[?]sturbate`)\n    .addPattern((0, Pattern_1.pattern) `masterbate`))\n    .addPhrase((phrase) => phrase\n    .setMetadata({ originalWord: 'negro' })\n    .addPattern((0, Pattern_1.pattern) `negro`)\n    .addWhitelistedTerm('montenegro')\n    .addWhitelistedTerm('negron')\n    .addWhitelistedTerm('stoneground')\n    .addWhitelistedTerm('winegrow'))\n    .addPhrase((phrase) => phrase\n    .setMetadata({ originalWord: 'nigger' })\n    .addPattern((0, Pattern_1.pattern) `n[i]gger`)\n    .addPattern((0, Pattern_1.pattern) `n[i]gga`)\n    .addPattern((0, Pattern_1.pattern) `|nig|`)\n    .addPattern((0, Pattern_1.pattern) `|nigs|`)\n    .addWhitelistedTerm('snigger'))\n    .addPhrase((phrase) => phrase\n    .setMetadata({ originalWord: 'orgasm' })\n    .addPattern((0, Pattern_1.pattern) `[or]gasm`)\n    .addWhitelistedTerm('gasma'))\n    .addPhrase((phrase) => phrase\n    .setMetadata({ originalWord: 'orgy' })\n    .addPattern((0, Pattern_1.pattern) `orgy`)\n    .addPattern((0, Pattern_1.pattern) `orgies`)\n    .addWhitelistedTerm('porgy'))\n    .addPhrase((phrase) => phrase\n    .setMetadata({ originalWord: 'penis' })\n    .addPattern((0, Pattern_1.pattern) `pe[e]nis`)\n    .addPattern((0, Pattern_1.pattern) `|pnis`)\n    .addWhitelistedTerm('pen is'))\n    .addPhrase((phrase) => phrase.setMetadata({ originalWord: 'piss' }).addPattern((0, Pattern_1.pattern) `|piss`))\n    .addPhrase((phrase) => phrase\n    .setMetadata({ originalWord: 'porn' })\n    .addPattern((0, Pattern_1.pattern) `|prn|`)\n    .addPattern((0, Pattern_1.pattern) `porn`)\n    .addWhitelistedTerm('p orna'))\n    .addPhrase((phrase) => phrase.setMetadata({ originalWord: 'prick' }).addPattern((0, Pattern_1.pattern) `|prick[s]|`))\n    .addPhrase((phrase) => phrase.setMetadata({ originalWord: 'pussy' }).addPattern((0, Pattern_1.pattern) `p[u]ssy`))\n    .addPhrase((phrase) => phrase\n    .setMetadata({ originalWord: 'rape' })\n    .addPattern((0, Pattern_1.pattern) `|rape`)\n    .addPattern((0, Pattern_1.pattern) `|rapis[s]t`))\n    .addPhrase((phrase) => phrase.setMetadata({ originalWord: 'retard' }).addPattern((0, Pattern_1.pattern) `retard`))\n    .addPhrase((phrase) => phrase.setMetadata({ originalWord: 'scat' }).addPattern((0, Pattern_1.pattern) `|s[s]cat|`))\n    .addPhrase((phrase) => phrase.setMetadata({ originalWord: 'semen' }).addPattern((0, Pattern_1.pattern) `|s[s]e[e]me[e]n`))\n    .addPhrase((phrase) => phrase\n    .setMetadata({ originalWord: 'sex' })\n    .addPattern((0, Pattern_1.pattern) `|s[s]e[e]x|`)\n    .addPattern((0, Pattern_1.pattern) `|s[s]e[e]xy|`))\n    .addPhrase((phrase) => phrase\n    .setMetadata({ originalWord: 'shit' })\n    .addPattern((0, Pattern_1.pattern) `shit`)\n    .addWhitelistedTerm('s hit')\n    .addWhitelistedTerm('sh it')\n    .addWhitelistedTerm('shi t')\n    .addWhitelistedTerm('shitake')\n    .addWhitelistedTerm('mishit'))\n    .addPhrase((phrase) => phrase.setMetadata({ originalWord: 'slut' }).addPattern((0, Pattern_1.pattern) `s[s]lut`))\n    .addPhrase((phrase) => phrase.setMetadata({ originalWord: 'spastic' }).addPattern((0, Pattern_1.pattern) `|spastic`))\n    .addPhrase((phrase) => phrase\n    .setMetadata({ originalWord: 'tit' })\n    .addPattern((0, Pattern_1.pattern) `|tit|`)\n    .addPattern((0, Pattern_1.pattern) `|tits|`)\n    .addPattern((0, Pattern_1.pattern) `|titt`)\n    .addPattern((0, Pattern_1.pattern) `|tiddies`)\n    .addPattern((0, Pattern_1.pattern) `|tities`))\n    .addPhrase((phrase) => phrase.setMetadata({ originalWord: 'tranny' }).addPattern((0, Pattern_1.pattern) `tranny`))\n    .addPhrase((phrase) => phrase\n    .setMetadata({ originalWord: 'turd' })\n    .addPattern((0, Pattern_1.pattern) `|turd`)\n    .addWhitelistedTerm('turducken'))\n    .addPhrase((phrase) => phrase\n    .setMetadata({ originalWord: 'twat' })\n    .addPattern((0, Pattern_1.pattern) `|twat`)\n    .addWhitelistedTerm('twattle'))\n    .addPhrase((phrase) => phrase\n    .setMetadata({ originalWord: 'vagina' })\n    .addPattern((0, Pattern_1.pattern) `vagina`)\n    .addPattern((0, Pattern_1.pattern) `|v[?]gina`))\n    .addPhrase((phrase) => phrase.setMetadata({ originalWord: 'wank' }).addPattern((0, Pattern_1.pattern) `|wank`))\n    .addPhrase((phrase) => phrase\n    .setMetadata({ originalWord: 'whore' })\n    .addPattern((0, Pattern_1.pattern) `|wh[o]re|`)\n    .addPattern((0, Pattern_1.pattern) `|who[o]res[s]|`)\n    .addWhitelistedTerm(\"who're\"));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TransformerSet = void 0;\nclass TransformerSet {\n    constructor(transformers) {\n        this.transformers = transformers;\n        this.statefulTransformers = Array.from({ length: this.transformers.length });\n        for (let i = 0; i < this.transformers.length; i++) {\n            const transformer = this.transformers[i];\n            if (transformer.type === 1 /* TransformerType.Stateful */) {\n                this.statefulTransformers[i] = transformer.factory();\n            }\n        }\n    }\n    applyTo(char) {\n        let transformed = char;\n        for (let i = 0; i < this.transformers.length && transformed !== undefined; i++) {\n            const transformer = this.transformers[i];\n            if (transformer.type === 0 /* TransformerType.Simple */)\n                transformed = transformer.transform(transformed);\n            else\n                transformed = this.statefulTransformers[i].transform(transformed);\n        }\n        return transformed;\n    }\n    resetAll() {\n        for (let i = 0; i < this.transformers.length; i++) {\n            if (this.transformers[i].type === 1 /* TransformerType.Stateful */) {\n                this.statefulTransformers[i].reset();\n            }\n        }\n    }\n}\nexports.TransformerSet = TransformerSet;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createStatefulTransformer = exports.createSimpleTransformer = void 0;\n/**\n * Creates a container holding the transformer function provided. Simple\n * transformers are suitable for stateless transformations, e.g., a\n * transformation that maps certain characters to others. For transformations\n * that need to keep around state, see `createStatefulTransformer`.\n *\n * @example\n * ```typescript\n * function lowercaseToUppercase(char) {\n *  return isLowercase(char) ? char - 32 : char;\n * }\n *\n * const transformer = createSimpleTransformer(lowercaseToUppercase);\n * const matcher = new RegExpMatcher({ ..., blacklistMatcherTransformers: [transformer] });\n * ```\n * @example\n * ```typescript\n * function ignoreAllNonDigitChars(char) {\n *  return isDigit(char) ? char : undefined;\n * }\n *\n * const transformer = createSimpleTransformer(ignoreAllNonDigitChars);\n * const matcher = new RegExpMatcher({ ..., blacklistMatcherTransformers: [transformer] });\n * ```\n * @param transformer - Function that applies the transformation. It should\n * accept one argument, the input character, and return the transformed\n * character. A return value of `undefined` indicates that the character should\n * be ignored.\n * @returns A container holding the transformer, which can then be passed to the\n * [[RegExpMatcher]].\n */\nfunction createSimpleTransformer(transformer) {\n    return { type: 0 /* TransformerType.Simple */, transform: transformer };\n}\nexports.createSimpleTransformer = createSimpleTransformer;\n/**\n * Creates a container holding the stateful transformer. Stateful transformers\n * are objects which satisfy the `StatefulTransformer` interface. They are\n * suitable for transformations that require keeping around some state regarding\n * the characters previously transformed in the text.\n *\n * @example\n * ```typescript\n * class IgnoreDuplicateCharactersTransformer implements StatefulTransformer {\n *  private lastChar = -1;\n *\n *  public transform(char: number) {\n *      if (char === this.lastChar) return undefined;\n *      this.lastChar = char;\n *      return char;\n *  }\n *\n *  public reset() {\n *      this.lastChar = -1;\n *  }\n * }\n *\n * const transformer = createStatefulTransformer(() => new IgnoreDuplicateCharactersTransformer());\n * const matcher = new RegExpMatcher({ ..., blacklistMatcherTransformers: [transformer] });\n * ```\n * @param factory A function that returns an instance of the stateful\n * transformer.\n * @returns A container holding the stateful transformer, which can then be\n * passed to the [[RegExpMatcher]].\n */\nfunction createStatefulTransformer(factory) {\n    return { type: 1 /* TransformerType.Stateful */, factory };\n}\nexports.createStatefulTransformer = createStatefulTransformer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.collapseDuplicatesTransformer = void 0;\nconst Char_1 = require(\"../../util/Char\");\nconst Transformers_1 = require(\"../Transformers\");\nconst transformer_1 = require(\"./transformer\");\n/**\n * Creates a transformer that collapses duplicate characters. This is useful for\n * detecting variants of patterns in which a character is repeated to bypass\n * detection.\n *\n * As an example, the pattern `hi` does not match `hhiii` by default, as the\n * frequency of the characters does not match. With this transformer, `hhiii`\n * would become `hi`, and would therefore match the pattern.\n *\n * **Application order**\n *\n * It is recommended that this transformer be applied after all other\n * transformers. Using it before other transformers may have the effect of not\n * catching duplicates of certain characters that were originally different but\n * became the same after a series of transformations.\n *\n * **Warning**\n *\n * This transformer should be used with caution, as while it can make certain\n * patterns match text that wouldn't have been matched before, it can also go\n * the other way. For example, the pattern `hello` clearly matches `hello`, but\n * with this transformer, by default, `hello` would become `helo` which does\n * _not_ match. In this cases, the `customThresholds` option can be used to\n * allow two `l`s in a row, making it leave `hello` unchanged.\n *\n * @example\n * ```typescript\n * // Collapse runs of the same character.\n * const transformer = collapseDuplicatesTransformer();\n * const matcher = new RegExpMatcher({ ..., blacklistMatcherTransformers: [transformer] });\n * ```\n * @example\n * ```typescript\n * // Collapse runs of characters other than 'a'.\n * const transformer = collapseDuplicatesTransformer({ customThresholds: new Map([['a', Infinity]]) });\n * const matcher = new RegExpMatcher({ ..., blacklistMatcherTransformers: [transformer] });\n * ```\n * @param options - Options for the transformer.\n * @returns A container holding the transformer, which can then be passed to the\n * [[RegExpMatcher]].\n */\nfunction collapseDuplicatesTransformer({ defaultThreshold = 1, customThresholds = new Map(), } = {}) {\n    const map = createCharacterToThresholdMap(customThresholds);\n    return (0, Transformers_1.createStatefulTransformer)(() => new transformer_1.CollapseDuplicatesTransformer({ defaultThreshold, customThresholds: map }));\n}\nexports.collapseDuplicatesTransformer = collapseDuplicatesTransformer;\nfunction createCharacterToThresholdMap(customThresholds) {\n    const map = new Map();\n    for (const [str, threshold] of customThresholds) {\n        if (threshold < 0)\n            throw new RangeError('Expected all thresholds to be non-negative.');\n        const char = (0, Char_1.getAndAssertSingleCodePoint)(str);\n        map.set(char, threshold);\n    }\n    return map;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CollapseDuplicatesTransformer = void 0;\nclass CollapseDuplicatesTransformer {\n    constructor({ defaultThreshold, customThresholds }) {\n        this.remaining = -1;\n        this.lastChar = -1;\n        this.defaultThreshold = defaultThreshold;\n        this.customThresholds = customThresholds;\n    }\n    transform(char) {\n        if (char === this.lastChar) {\n            return this.remaining-- > 0 ? char : undefined;\n        }\n        const threshold = this.customThresholds.get(char) ?? this.defaultThreshold;\n        this.remaining = threshold - 1;\n        this.lastChar = char;\n        return threshold > 0 ? char : undefined;\n    }\n    reset() {\n        this.remaining = -1;\n        this.lastChar = -1;\n    }\n}\nexports.CollapseDuplicatesTransformer = CollapseDuplicatesTransformer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.remapCharactersTransformer = void 0;\nconst Char_1 = require(\"../../util/Char\");\nconst CharacterIterator_1 = require(\"../../util/CharacterIterator\");\nconst Transformers_1 = require(\"../Transformers\");\n/**\n * Maps certain characters to other characters, leaving other characters\n * unchanged.\n *\n * **Application order**\n *\n * It is recommended that this transformer be applied near the start of the\n * transformer chain.\n *\n * @example\n * ```typescript\n * // Transform 'a' to 'b'.\n * const transformer = remapCharactersTransformer({ 'b': 'a' });\n * const matcher = new RegExpMatcher({ ..., blacklistMatcherTransformers: [transformer] });\n * ```\n * @example\n * ```typescript\n * // Transform '🅱️' to 'b', and use a map instead of an object as the argument.\n * const transformer = remapCharactersTransformer(new Map([['b', '🅱️']]));\n * const matcher = new RegExpMatcher({ ..., blacklistMatcherTransformers: [transformer] });\n * ```\n * @example\n * ```typescript\n * // Transform '🇴' and '0' to 'o'.\n * const transformer = remapCharactersTransformer({ o: '🇴0' });\n * const matcher = new RegExpMatcher({ ..., blacklistMatcherTransformers: [transformer] });\n * ```\n * @param mapping - A map/object mapping certain characters to others.\n * @returns A container holding the transformer, which can then be passed to the\n * [[RegExpMatcher]].\n * @see [[resolveConfusablesTransformer|  Transformer that handles confusable Unicode characters]]\n * @see [[resolveLeetSpeakTransformer | Transformer that handles leet-speak]]\n */\nfunction remapCharactersTransformer(mapping) {\n    const map = createOneToOneMap(mapping);\n    return (0, Transformers_1.createSimpleTransformer)((c) => map.get(c) ?? c);\n}\nexports.remapCharactersTransformer = remapCharactersTransformer;\nfunction createOneToOneMap(mapping) {\n    const map = new Map();\n    const iterable = mapping instanceof Map ? mapping.entries() : Object.entries(mapping);\n    for (const [original, equivalents] of iterable) {\n        const originalChar = (0, Char_1.getAndAssertSingleCodePoint)(original);\n        const iter = new CharacterIterator_1.CharacterIterator(equivalents);\n        for (const equivalent of iter)\n            map.set(equivalent, originalChar);\n    }\n    return map;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.confusables = void 0;\n/**\n * Maps confusable Unicode characters to their normalized equivalents.\n *\n * @copyright\n * The data here is taken from the\n * [confusables](https://github.com/gc/confusables) library.\n *\n * ```text\n * # The MIT License (MIT)\n *\n * Copyright © 2019 https://github.com/gc/\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the “Software”), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n * ```\n */\nexports.confusables = new Map([\n    [' ', ' '],\n    ['0', '⓿'],\n    ['1', '⓵➊⑴¹𝟏𝟙１𝟷𝟣⒈𝟭1➀₁①❶⥠'],\n    ['2', '⓶⒉⑵➋ƻ²ᒿ𝟚２𝟮𝟤ᒾ𝟸Ƨ𝟐②ᴤ₂➁❷ᘝƨ'],\n    ['3', '³ⳌꞫ𝟑ℨ𝟛𝟯𝟥Ꝫ➌ЗȜ⓷ӠƷ３𝟹⑶⒊ʒʓǯǮƺ𝕴ᶾзᦡ➂③₃ᶚᴣᴟ❸ҘҙӬӡӭӟӞ'],\n    ['4', '➍ҶᏎ𝟜ҷ⓸ҸҹӴӵᶣ４чㄩ⁴➃₄④❹Ӌ⑷⒋'],\n    ['5', '𝟱⓹➎Ƽ𝟓𝟻𝟝𝟧５➄₅⑤⁵❺ƽ⑸⒌'],\n    ['6', 'ⳒᏮ𝟞𝟨𝟔➏⓺Ϭϭ⁶б６ᧈ⑥➅₆❻⑹⒍'],\n    ['7', '⓻𐓒➐７⁷⑦₇❼➆⑺⒎'],\n    ['8', '𐌚➑⓼８𝟠𝟪৪⁸₈𝟴➇⑧❽𝟾𝟖⑻⒏'],\n    ['9', 'ꝮⳊ⓽➒੧৭୨９𝟫𝟿𝟗⁹₉Գ➈⑨❾⑼⒐'],\n    ['A', '🄰Ꭿ𐊠𝕬𝜜𝐴ꓮᎪ𝚨ꭺ𝝖🅐Å∀🇦₳🅰𝒜𝘈𝐀𝔸дǺᗅⒶＡΑᾋᗩĂÃÅǍȀȂĀȺĄʌΛλƛᴀᴬДАልÄₐᕱªǞӒΆẠẢẦẨẬẮẰẲẴẶᾸᾹᾺΆᾼᾈᾉᾊᾌᾍᾎᾏἈἉἊἋἌἍἎἏḀȦǠӐÀÁÂẤẪ𝛢𝓐𝙰𝘼'],\n    ['a', '∂⍺ⓐձǟᵃᶏ⒜аɒａαȃȁคǎმäɑāɐąᾄẚạảǡầẵḁȧӑӓãåάὰάăẩằẳặᾀᾁᾂᾃᾅᾆᾰᾱᾲᾳᾴᶐᾶᾷἀἁἂἃἄἅἆἇᾇậắàáâấẫǻⱥ𝐚𝑎𝒂𝒶𝓪𝔞𝕒𝖆𝖺𝗮𝘢𝙖𝚊𝛂𝛼𝜶𝝰𝞪⍶'],\n    ['B', '𐌁𝑩𝕭🄱𐊡𝖡𝘽ꓐ𝗕𝘉𝜝𐊂𝚩𝐁𝛣𝝗𝐵𝙱𝔹Ᏼᏼ𝞑Ꞵ𝔅🅑฿𝓑ᗿᗾᗽ🅱ⒷＢвϐᗷƁ乃ßცჩ๖βɮБՅ๒ᙖʙᴮᵇጌḄℬΒВẞḂḆɃദᗹᗸᵝᙞᙟᙝᛒᙗᙘᴃ🇧'],\n    ['b', 'Ꮟ𝐛𝘣𝒷𝔟𝓫𝖇𝖻𝑏𝙗𝕓𝒃𝗯𝚋♭ᑳᒈｂᖚᕹᕺⓑḃḅҍъḇƃɓƅᖯƄЬᑲþƂ⒝ЪᶀᑿᒀᒂᒁᑾьƀҌѢѣᔎ'],\n    ['C', 'ᏟⲤ🄲ꓚ𐊢𐌂🅲𐐕🅒☾ČÇⒸＣↃƇᑕㄈ¢८↻ĈϾՇȻᙅᶜ⒞ĆҀĊ©टƆℂℭϹС匚ḈҪʗᑖᑡᑢᑣᑤᑥⅭ𝐂𝐶𝑪𝒞𝓒𝕮𝖢𝗖𝘊𝘾ᔍ'],\n    ['c', 'ⲥ𐐽ꮯĉｃⓒćčċçҁƈḉȼↄсርᴄϲҫ꒝ςɽϛ𝙲ᑦ᧚𝐜𝑐𝒄𝒸𝓬𝔠𝕔𝖈𝖼𝗰𝘤𝙘𝚌₵🇨ᥴᒼⅽ'],\n    ['D', 'Ꭰ🄳𝔡𝖉𝔻𝗗𝘋𝙳𝐷𝓓𝐃𝑫𝕯𝖣𝔇𝘿ꭰⅅ𝒟ꓓ🅳🅓ⒹＤƉᗪƊÐԺᴅᴰↁḊĐÞⅮᗞᑯĎḌḐḒḎᗫᗬᗟᗠᶛᴆ🇩'],\n    ['d', 'Ꮷꓒ𝓭ᵭ₫ԃⓓｄḋďḍḑḓḏđƌɖɗᵈ⒟ԁⅾᶁԀᑺᑻᑼᑽᒄᑰᑱᶑ𝕕𝖽𝑑𝘥𝒅𝙙𝐝𝗱𝚍ⅆ𝒹ʠժ'],\n    ['E', 'ꭼ🄴𝙀𝔼𐊆𝚬ꓰ𝝚𝞔𝓔𝑬𝗘🅴🅔ⒺΈＥƎἝᕮƐモЄᴇᴱᵉÉ乇ЁɆꂅ€ÈℰΕЕⴹᎬĒĔĖĘĚÊËԐỀẾỄỂẼḔḖẺȄȆẸỆȨḜḘḚἘἙἚἛἜῈΈӖὲέЀϵ🇪'],\n    ['e', '𝑒𝓮𝕖𝖊𝘦𝗲𝚎𝙚𝒆𝔢𝖾𝐞Ҿҿⓔｅ⒠èᧉéᶒêɘἔềếễ૯ǝєεēҽɛểẽḕḗĕėëẻěȅȇẹệȩɇₑęḝḙḛ℮еԑѐӗᥱёἐἑἒἓἕℯ'],\n    ['F', '🄵𐊇𝔉𝘍𐊥ꓝꞘ🅵🅕𝓕ⒻＦғҒᖴƑԲϝቻḞℱϜ₣🇫Ⅎ'],\n    ['f', '𝐟𝖋ⓕｆƒḟʃբᶠ⒡ſꊰʄ∱ᶂ𝘧'],\n    ['G', 'ꓖᏳ🄶Ꮐᏻ𝔾𝓖𝑮𝕲ꮐ𝒢𝙂𝖦𝙶𝔊𝐺𝐆🅶🅖ⒼＧɢƓʛĢᘜᴳǴĠԌĜḠĞǦǤԍ₲🇬⅁'],\n    ['g', 'ⓖｇǵĝḡğġǧģց૭ǥɠﻭﻮᵍ⒢ℊɡᧁ𝐠𝑔𝒈𝓰𝔤𝕘𝖌𝗀𝗴𝘨𝙜𝚐'],\n    ['H', '🄷𝜢ꓧ𝘏𝐻𝝜𝖧𐋏𝗛ꮋℍᎻℌⲎ𝑯𝞖🅷🅗ዞǶԋⒽＨĤᚺḢḦȞḤḨḪĦⱧҢңҤῊΉῌἨἩἪἫἭἮἯᾘᾙᾚᾛᾜᾝᾞᾟӉӈҥΉн卄♓𝓗ℋН𝐇𝙃𝙷ʜ𝛨Η𝚮ᕼӇᴴᵸ🇭'],\n    ['h', 'Һ⒣ђⓗｈĥḣḧȟḥḩḫẖħⱨհһከኩኪካɦℎ𝐡𝒉𝒽𝓱𝔥𝕙𝖍𝗁𝗵𝘩𝙝𝚑իʰᑋᗁɧんɥ'],\n    ['I', '🄸ЇꀤᏆ🅸🅘إﺇٳأﺃٲٵⒾＩ៸ÌÍÎĨĪĬİÏḮỈǏȈȊỊĮḬƗェエῘῙῚΊἸἹἺἻἼἽἾⅠΪΊɪᶦᑊᥣ𝛪𝐈𝙄𝙸𝓵𝙡𝐼ᴵ𝚰𝑰🇮'],\n    ['i', 'ⓘｉìíîĩīĭïḯỉǐȉȋịḭῐῑῒΐῖῗἰἱἲⅰⅼ∣ⵏ￨׀ا١۱ߊᛁἳἴἵɨіὶίᶖ𝔦𝚒𝝸𝗂𝐢𝕚𝖎𝗶𝘪𝙞ίⁱᵢ𝓲⒤'],\n    ['J', '🄹🅹🅙ⒿＪЈʝᒍנﾌĴʆวلյʖᴊᴶﻝጋɈⱼՂๅႱįᎫȷ丿ℐℑᒘᒙᒚᒛᒴᒵᒎᒏ🇯'],\n    ['j', 'ⓙｊϳʲ⒥ɉĵǰјڶᶨ𝒿𝘫𝗷𝑗𝙟𝔧𝒋𝗃𝓳𝕛𝚓𝖏𝐣'],\n    ['K', '𝗞🄺𝜥𝘒ꓗ𝙆𝕂Ⲕ𝔎𝛫Ꮶ𝞙𝒦🅺🅚₭ⓀＫĸḰќƘкҠκқҟӄʞҚКҡᴋᴷᵏ⒦ᛕЌጕḲΚKҜҝҞĶḴǨⱩϗӃ🇰'],\n    ['k', 'ⓚｋḱǩḳķḵƙⱪᶄ𝐤𝘬𝗄𝕜𝜅𝜘𝜿𝝒𝝹𝞌𝞳𝙠𝚔𝑘𝒌ϰ𝛋𝛞𝟆𝗸𝓴𝓀'],\n    ['L', '🄻𐐛Ⳑ𝑳𝙻𐑃𝓛ⳑꮮᏞꓡ🅻🅛ﺈ└ⓁւＬĿᒪ乚ՆʟꓶιԼᴸˡĹረḶₗΓլĻᄂⅬℒⱢᥧᥨᒻᒶᒷᶫﺎᒺᒹᒸᒫ⎳ㄥŁⱠﺄȽ🇱'],\n    ['l', 'ⓛｌŀĺľḷḹļӀℓḽḻłﾚɭƚɫⱡ|Ɩ⒧ʅǀוןΙІ｜ᶩӏ𝓘𝕀𝖨𝗜𝘐𝐥𝑙𝒍𝓁𝔩𝕝𝖑𝗅𝗹𝘭𝚕𝜤𝝞ı𝚤ɩι𝛊𝜄𝜾𝞲'],\n    ['M', '🄼𐌑𐊰ꓟⲘᎷ🅼🅜ⓂＭмṂ൱ᗰ州ᘻო๓♏ʍᙏᴍᴹᵐ⒨ḾМṀ௱ⅯℳΜϺᛖӍӎ𝐌𝑀𝑴𝓜𝔐𝕄𝕸𝖬𝗠𝘔𝙈𝙼𝚳𝛭𝜧𝝡𝞛🇲'],\n    ['m', '₥ᵯ𝖒𝐦𝗆𝔪𝕞𝓂ⓜｍനᙢ൩ḿṁⅿϻṃጠɱ៳ᶆ𝙢𝓶𝚖𝑚𝗺᧕᧗'],\n    ['N', '🄽ℕꓠ𝛮𝝢𝙽𝚴𝑵𝑁Ⲛ𝐍𝒩𝞜𝗡𝘕𝜨𝓝𝖭🅽₦🅝ЙЍⓃҋ៷ＮᴎɴƝᑎ几иՈռИהЛπᴺᶰŃ刀ክṄⁿÑПΝᴨոϖǸŇṆŅṊṈทŊӢӣӤӥћѝйᥢҊᴻ🇳'],\n    ['n', 'ח𝒏𝓷𝙣𝑛𝖓𝔫𝗇𝚗𝗻ᥒⓝήｎǹᴒńñᾗηṅňṇɲņṋṉղຖՌƞŋ⒩ภกɳпŉлԉȠἠἡῃդᾐᾑᾒᾓᾔᾕᾖῄῆῇῂἢἣἤἥἦἧὴήበቡቢባቤብቦȵ𝛈𝜂𝜼𝝶𝞰𝕟𝘯𝐧𝓃ᶇᵰᥥ∩'],\n    [\n        'O',\n        'ꄲ🄾𐊒𝟬ꓳⲞ𐐄𐊫𐓂𝞞🅞⍥◯ⵁ⊖０⊝𝝤Ѳϴ𝚶𝜪ѺӦӨӪΌʘ𝐎ǑÒŎÓÔÕȌȎㇿ❍ⓄＯὋロ❤૦⊕ØФԾΘƠᴼᵒ⒪ŐÖₒ¤◊Φ〇ΟОՕଠഠ௦סỒỐỖỔṌȬṎŌṐṒȮȰȪỎỜỚỠỞỢỌỘǪǬǾƟⵔ߀៰⍜⎔⎕⦰⦱⦲⦳⦴⦵⦶⦷⦸⦹⦺⦻⦼⦽⦾⦿⧀⧁⧂⧃ὈὉὊὌὍ',\n    ],\n    [\n        'o',\n        '𝚘𝛐𝗈𝞼ဝⲟ𝙤၀𐐬𝔬𐓪𝓸🇴⍤○ϙ🅾𝒪𝖮𝟢𝟶𝙾𝘰𝗼𝕠𝜊𝐨𝝾𝞸ᐤⓞѳ᧐ᥲðｏఠᦞՓòөӧóºōôǒȏŏồốȍỗổõσṍȭṏὄṑṓȯȫ๏ᴏőöѻоዐǭȱ০୦٥౦೦൦๐໐οօᴑ०੦ỏơờớỡởợọộǫøǿɵծὀὁόὸόὂὃὅ',\n    ],\n    ['P', '🄿ꓑ𝚸𝙿𝞠𝙋ꮲⲢ𝒫𝝦𝑃𝑷𝗣𝐏𐊕𝜬𝘗𝓟𝖯𝛲Ꮲ🅟Ҏ🅿ⓅＰƤᑭ尸Ṗրφքᴘᴾᵖ⒫ṔｱקРየᴩⱣℙΡῬᑸᑶᑷᑹᑬᑮ🇵₱'],\n    ['p', 'ҏ℗ⓟｐṕṗƥᵽῥρрƿǷῤ⍴𝓹𝓅𝐩𝑝𝒑𝔭𝕡𝖕𝗉𝗽𝘱𝙥𝚙𝛒𝝆𝞺𝜌𝞀'],\n    ['Q', '🅀🆀🅠ⓆＱℚⵕԚ𝐐𝑄𝑸𝒬𝓠𝚀𝘘𝙌𝖰𝕼𝔔𝗤🇶'],\n    ['q', 'ⓠｑգ⒬۹զᑫɋɊԛ𝗊𝑞𝘲𝕢𝚚𝒒𝖖𝐪𝔮𝓺𝙦'],\n    ['R', '℞℟ꭱᏒ𐒴ꮢᎡꓣ🆁🅡ⓇＲᴙȒʀᖇя尺ŔЯરƦᴿዪṚɌʁℛℜℝṘŘȐṜŖṞⱤ𝐑𝑅𝑹𝓡𝕽𝖱𝗥𝘙𝙍𝚁ᚱ🇷ᴚ'],\n    ['r', 'ⓡｒŕṙřȑȓṛṝŗгՐɾᥬṟɍʳ⒭ɼѓᴦᶉ𝐫𝑟𝒓𝓇𝓻𝔯𝕣𝖗𝗋𝗿𝘳𝙧ᵲґᵣ'],\n    ['S', '🅂ꇙ𝓢𝗦Ꮪ𝒮Ꮥ𝚂𝐒ꓢ𝖲𝔖𝙎𐊖𝕾𐐠𝘚𝕊𝑆𝑺🆂🅢ⓈＳṨŞֆՏȘˢ⒮ЅṠŠŚṤŜṦṢടᔕᔖᔢᔡᔣᔤ'],\n    ['s', 'ⓢꜱ𐑈ꮪｓśṥŝṡšṧʂṣṩѕşșȿᶊక𝐬𝑠𝒔𝓈𝓼𝔰𝕤𝖘𝗌𝘀𝘴𝙨𝚜ގ🇸'],\n    ['T', '🅃🆃𐌕𝚻𝛵𝕋𝕿𝑻𐊱𐊗𝖳𝙏🝨𝝩𝞣𝚃𝘛𝑇ꓔ⟙𝐓Ⲧ𝗧⊤𝔗Ꭲꭲ𝒯🅣⏇⏉ⓉＴтҬҭƬイŦԵτᴛᵀｲፕϮŤ⊥ƮΤТ下ṪṬȚŢṰṮ丅丁ᐪ𝛕𝜏𝝉𝞃𝞽𝓣ㄒ🇹ጥ'],\n    ['t', 'ⓣｔṫẗťṭțȶ੮էʇ†ţṱṯƭŧᵗ⒯ʈեƫ𝐭𝑡𝒕𝓉𝓽𝔱𝕥𝖙𝗍𝘁𝘵𝙩𝚝ナ'],\n    ['U', '🅄ꓴ𐓎꒤🆄🅤ŨŬŮᑗᑘǓǕǗǙⓊＵȖᑌ凵ƱմԱꓵЦŪՄƲᙀᵁᵘ⒰ŰપÜՍÙÚÛṸṺǛỦȔƯỪỨỮỬỰỤṲŲṶṴɄᥩᑧ∪ᘮ⋃𝐔𝑈𝑼𝒰𝓤𝔘𝕌𝖀𝖴𝗨𝘜𝙐𝚄🇺'],\n    ['u', 'ὺύⓤｕùũūừṷṹŭǖữᥙǚǜὗυΰนսʊǘǔúůᴜűųยûṻцሁüᵾᵤµʋủȕȗưứửựụṳṵʉῠῡῢΰῦῧὐὑϋύὒὓὔὕὖᥔ𝐮𝑢𝒖𝓊𝓾𝔲𝕦𝖚𝗎ᶙ'],\n    ['V', '🅅ꓦ𝑽𝖵𝘝Ꮩ𝚅𝙑𝐕🆅🅥ⓋＶᐯѴᵛ⒱۷ṾⅴⅤṼ٧ⴸѶᐺᐻ🇻𝓥'],\n    ['v', 'ሀⓥｖ𝜐𝝊ṽṿ౮งѵעᴠνטᵥѷ៴ᘁ𝙫𝚟𝛎𝜈𝝂𝝼𝞶𝘷𝘃𝓿'],\n    ['W', '🅆ᏔᎳ𝑾ꓪ𝒲𝘞🆆Ⓦ🅦ｗＷẂᾧᗯᥕ山ѠຟచաЩШώщฬшᙎᵂʷ⒲ฝሠẄԜẀŴẆẈധᘺѿᙡƜ₩🇼'],\n    ['w', 'ẁꮃẃⓦ⍵ŵẇẅẘẉⱳὼὠὡὢὣωὤὥὦὧῲῳῴῶῷⱲѡԝᴡώᾠᾡᾢᾣᾤᾥᾦɯ𝝕𝟉𝞏'],\n    ['X', '🞨🞩🞪🅇🞫🞬𐌗Ⲭꓫ𝖃𝞦𝘟𐊐𝚾𝝬𝜲Ꭓ𐌢𝖷𝑋𝕏𝔛𐊴𝗫🆇🅧❌Ⓧ𝓧ＸẊ᙭χㄨ𝒳ӾჯӼҳЖΧҲᵡˣ⒳אሸẌꊼⅩХ╳᙮ᕁᕽⅹᚷⵝ𝙓𝚇乂𝐗🇽'],\n    ['x', 'ⓧｘхẋ×ₓ⤫⤬⨯ẍᶍ𝙭ӽ𝘹𝐱𝚡⨰ﾒ𝔁'],\n    ['Y', 'Ⲩ𝚈𝑌𝗬𝐘ꓬ𝒀𝜰𐊲🆈🅨ⓎＹὛƳㄚʏ⅄ϔ￥¥ՎϓγץӲЧЎሃŸɎϤΥϒҮỲÝŶỸȲẎỶỴῨῩῪΎὙὝὟΫΎӮӰҰұ𝕐🇾'],\n    ['y', '🅈ᎽᎩⓨｙỳýŷỹȳẏÿỷуყẙỵƴɏᵞɣʸᶌү⒴ӳӱӯўУʎ'],\n    ['Z', '🅉ꓜ𝗭𝐙☡Ꮓ𝘡🆉🅩ⓏＺẔƵ乙ẐȤᶻ⒵ŹℤΖŻŽẒⱫ🇿'],\n    ['z', 'ꮓⓩｚźẑżžẓẕƶȥɀᴢጊʐⱬᶎʑᙆ'],\n]);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveConfusablesTransformer = void 0;\nconst remap_characters_1 = require(\"../remap-characters\");\nconst confusables_1 = require(\"./confusables\");\n/**\n * Creates a transformer that maps confusable Unicode characters to their\n * normalized equivalent. For example, `⓵`, `➊`, and `⑴` become `1` when using\n * this transformer.\n *\n * **Application order**\n *\n * It is recommended that this transformer be applied near the start of the\n * transformer chain.\n *\n * @example\n * ```typescript\n * const transformer = resolveConfusablesTransformer();\n * const matcher = new RegExpMatcher({ ..., blacklistMatcherTransformers: [transformer] });\n * ```\n * @returns A container holding the transformer, which can then be passed to the\n * [[RegExpMatcher]].\n */\nfunction resolveConfusablesTransformer() {\n    return (0, remap_characters_1.remapCharactersTransformer)(confusables_1.confusables);\n}\nexports.resolveConfusablesTransformer = resolveConfusablesTransformer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.dictionary = void 0;\nexports.dictionary = new Map([\n    ['a', '@4'],\n    ['c', '('],\n    ['e', '3'],\n    ['i', '1|'],\n    ['o', '0'],\n    ['s', '$'],\n]);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveLeetSpeakTransformer = void 0;\nconst remap_characters_1 = require(\"../remap-characters\");\nconst dictionary_1 = require(\"./dictionary\");\n/**\n * Creates a transformer that maps leet-speak characters to their normalized\n * equivalent. For example, `$` becomes `s` when using this transformer.\n *\n * **Application order**\n *\n * It is recommended that this transformer be applied near the start of the\n * transformer chain, but after similar transformers that map characters to\n * other characters, such as the [[resolveConfusablesTransformer | transformer\n * that resolves confusable Unicode characters]].\n *\n * @example\n * ```typescript\n * const transformer = resolveLeetSpeakTransformer();\n * const matcher = new RegExpMatcher({ ..., blacklistMatcherTransformers: [transformer] });\n * ```\n * @returns A container holding the transformer, which can then be passed to the\n * [[RegExpMatcher]].\n */\nfunction resolveLeetSpeakTransformer() {\n    return (0, remap_characters_1.remapCharactersTransformer)(dictionary_1.dictionary);\n}\nexports.resolveLeetSpeakTransformer = resolveLeetSpeakTransformer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.skipNonAlphabeticTransformer = void 0;\nconst Char_1 = require(\"../../util/Char\");\nconst Transformers_1 = require(\"../Transformers\");\n/**\n * Creates a transformer that skips non-alphabetic characters (`a`-`z`,\n * `A`-`Z`). This is useful when matching text on patterns that are solely\n * comprised of alphabetic characters (the pattern `hello` does not match\n * `h.e.l.l.o` by default, but does with this transformer).\n *\n * **Warning**\n *\n * This transformation is not part of the default set of transformations, as\n * there are some known rough edges with false negatives; see\n * [#23](https://github.com/jo3-l/obscenity/issues/23) and\n * [#46](https://github.com/jo3-l/obscenity/issues/46) on the GitHub issue\n * tracker.\n *\n * **Application order**\n *\n * It is recommended that this transformer be applied near the end of the\n * transformer chain, if at all.\n *\n * @example\n * ```typescript\n * const transformer = skipNonAlphabeticTransformer();\n * const matcher = new RegExpMatcher({ ..., blacklistMatcherTransformers: [transformer] });\n * ```\n * @returns A container holding the transformer, which can then be passed to the\n * [[RegExpMatcher]].\n */\nfunction skipNonAlphabeticTransformer() {\n    return (0, Transformers_1.createSimpleTransformer)((c) => ((0, Char_1.isAlphabetic)(c) ? c : undefined));\n}\nexports.skipNonAlphabeticTransformer = skipNonAlphabeticTransformer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toAsciiLowerCaseTransformer = void 0;\nconst Char_1 = require(\"../../util/Char\");\nconst Transformers_1 = require(\"../Transformers\");\n/**\n * Creates a transformer that changes all ASCII alphabet characters to\n * lower-case, leaving other characters unchanged.\n *\n * **Application order**\n *\n * It is recommended that this transformer be applied near the end of the\n * transformer chain. Using it before other transformers may have the effect of\n * making its changes useless as transformers applied after produce characters\n * of varying cases.\n *\n * @returns A container holding the transformer, which can then be passed to the\n * [[RegExpMatcher]].\n */\nfunction toAsciiLowerCaseTransformer() {\n    return (0, Transformers_1.createSimpleTransformer)((c) => ((0, Char_1.isUpperCase)(c) ? (0, Char_1.invertCaseOfAlphabeticChar)(c) : c));\n}\nexports.toAsciiLowerCaseTransformer = toAsciiLowerCaseTransformer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAndAssertSingleCodePoint = exports.invertCaseOfAlphabeticChar = exports.isUpperCase = exports.isLowerCase = exports.isAlphabetic = exports.isDigit = exports.isWordChar = exports.convertSurrogatePairToCodePoint = exports.isLowSurrogate = exports.isHighSurrogate = void 0;\nfunction isHighSurrogate(char) {\n    return 55296 /* CharacterCode.HighSurrogateStart */ <= char && char <= 56319 /* CharacterCode.HighSurrogateEnd */;\n}\nexports.isHighSurrogate = isHighSurrogate;\nfunction isLowSurrogate(char) {\n    return 56320 /* CharacterCode.LowSurrogateStart */ <= char && char <= 57343 /* CharacterCode.LowSurrogateEnd */;\n}\nexports.isLowSurrogate = isLowSurrogate;\n// See https://unicodebook.readthedocs.io/unicode_encodings.html#utf-16-surrogate-pairs.\nfunction convertSurrogatePairToCodePoint(highSurrogate, lowSurrogate) {\n    return ((highSurrogate - 55296 /* CharacterCode.HighSurrogateStart */) * 0x400 +\n        lowSurrogate -\n        56320 /* CharacterCode.LowSurrogateStart */ +\n        0x10000);\n}\nexports.convertSurrogatePairToCodePoint = convertSurrogatePairToCodePoint;\nfunction isWordChar(char) {\n    return isDigit(char) || isAlphabetic(char);\n}\nexports.isWordChar = isWordChar;\nfunction isDigit(char) {\n    return 48 /* CharacterCode.Zero */ <= char && char <= 57 /* CharacterCode.Nine */;\n}\nexports.isDigit = isDigit;\nfunction isAlphabetic(char) {\n    return isLowerCase(char) || isUpperCase(char);\n}\nexports.isAlphabetic = isAlphabetic;\nfunction isLowerCase(char) {\n    return 97 /* CharacterCode.LowerA */ <= char && char <= 122 /* CharacterCode.LowerZ */;\n}\nexports.isLowerCase = isLowerCase;\nfunction isUpperCase(char) {\n    return 65 /* CharacterCode.UpperA */ <= char && char <= 90 /* CharacterCode.UpperZ */;\n}\nexports.isUpperCase = isUpperCase;\n// Input must be a lower-case or upper-case ASCII alphabet character.\nfunction invertCaseOfAlphabeticChar(char) {\n    return char ^ 0x20;\n}\nexports.invertCaseOfAlphabeticChar = invertCaseOfAlphabeticChar;\n// Asserts that the string is comprised of one and only one code point,\n// then returns said code point.\nfunction getAndAssertSingleCodePoint(str) {\n    if ([...str].length !== 1)\n        throw new RangeError(`Expected the input string to be one code point in length.`);\n    return str.codePointAt(0);\n}\nexports.getAndAssertSingleCodePoint = getAndAssertSingleCodePoint;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CharacterIterator = void 0;\nconst Char_1 = require(\"./Char\");\nclass CharacterIterator {\n    constructor(input) {\n        this.lastPosition = -1;\n        this.currentPosition = 0;\n        this._lastWidth = 0;\n        this._input = input ?? '';\n    }\n    get input() {\n        return this._input;\n    }\n    setInput(input) {\n        this._input = input;\n        this.reset();\n        return this;\n    }\n    reset() {\n        this.lastPosition = -1;\n        this.currentPosition = 0;\n        this._lastWidth = 0;\n    }\n    next() {\n        if (this.done)\n            return { done: true, value: undefined };\n        this.lastPosition = this.currentPosition;\n        const char = this._input.charCodeAt(this.currentPosition++);\n        this._lastWidth = 1;\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n        if (this.done || !(0, Char_1.isHighSurrogate)(char))\n            return { done: false, value: char };\n        // Do we have a surrogate pair?\n        const next = this._input.charCodeAt(this.currentPosition);\n        if ((0, Char_1.isLowSurrogate)(next)) {\n            this._lastWidth++;\n            this.currentPosition++;\n            return { done: false, value: (0, Char_1.convertSurrogatePairToCodePoint)(char, next) };\n        }\n        return { done: false, value: char };\n    }\n    // Position of the iterator; equals the start index of the last character consumed.\n    // -1 if no characters were consumed yet.\n    get position() {\n        return this.lastPosition;\n    }\n    // Width of the last character consumed; 2 if it was a surrogate pair and 1 otherwise.\n    // 0 if no characters were consumed yet.\n    get lastWidth() {\n        return this._lastWidth;\n    }\n    get done() {\n        return this.currentPosition >= this._input.length;\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n}\nexports.CharacterIterator = CharacterIterator;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.compareIntervals = void 0;\nfunction compareIntervals(lowerBound0, upperBound0, lowerBound1, upperBound1) {\n    if (lowerBound0 < lowerBound1)\n        return -1;\n    if (lowerBound1 < lowerBound0)\n        return 1;\n    if (upperBound0 < upperBound1)\n        return -1;\n    if (upperBound1 < upperBound0)\n        return 1;\n    return 0;\n}\nexports.compareIntervals = compareIntervals;\n","module.exports = __WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__;","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","import { getDayOfYear } from \"../../getDayOfYear.js\";\nimport { getISOWeek } from \"../../getISOWeek.js\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.js\";\nimport { getWeek } from \"../../getWeek.js\";\nimport { getWeekYear } from \"../../getWeekYear.js\";\n\nimport { addLeadingZeros } from \"../addLeadingZeros.js\";\nimport { lightFormatters } from \"./lightFormatters.js\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(+date / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    return addLeadingZeros(+date, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n","import { addLeadingZeros } from \"../addLeadingZeros.js\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n","import { toDate } from \"../toDate.js\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","import { constructFrom } from \"../constructFrom.js\";\n\nexport function normalizeDates(context, ...dates) {\n  const normalize = constructFrom.bind(\n    null,\n    context || dates.find((date) => typeof date === \"object\"),\n  );\n  return dates.map(normalize);\n}\n","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occurs every 4 years, except for years that are divisible by 100 and not divisible by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n\n/**\n * @constant\n * @name constructFromSymbol\n * @summary Symbol enabling Date extensions to inherit properties from the reference date.\n *\n * The symbol is used to enable the `constructFrom` function to construct a date\n * using a reference date and a value. It allows to transfer extra properties\n * from the reference date to the new date. It's useful for extensions like\n * [`TZDate`](https://github.com/date-fns/tz) that accept a time zone as\n * a constructor argument.\n */\nexport const constructFromSymbol = Symbol.for(\"constructDateFrom\");\n","import { constructFromSymbol } from \"./constants.js\";\n\n/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * Starting from v3.7.0, it allows to construct a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from \"./constructFrom/date-fns\";\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date>(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use constructor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   );\n * }\n */\nexport function constructFrom(date, value) {\n  if (typeof date === \"function\") return date(value);\n\n  if (date && typeof date === \"object\" && constructFromSymbol in date)\n    return date[constructFromSymbol](value);\n\n  if (date instanceof Date) return new date.constructor(value);\n\n  return new Date(value);\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { millisecondsInDay } from \"./constants.js\";\nimport { startOfDay } from \"./startOfDay.js\";\n\n/**\n * The {@link differenceInCalendarDays} function options.\n */\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - The options object\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const laterStartOfDay = startOfDay(laterDate_);\n  const earlierStartOfDay = startOfDay(earlierDate_);\n\n  const laterTimestamp =\n    +laterStartOfDay - getTimezoneOffsetInMilliseconds(laterStartOfDay);\n  const earlierTimestamp =\n    +earlierStartOfDay - getTimezoneOffsetInMilliseconds(earlierStartOfDay);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((laterTimestamp - earlierTimestamp) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","import { defaultLocale } from \"./_lib/defaultLocale.js\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { formatters } from \"./_lib/format/formatters.js\";\nimport { longFormatters } from \"./_lib/format/longFormatters.js\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.js\";\nimport { isValid } from \"./isValid.js\";\nimport { toDate } from \"./toDate.js\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { formatters, longFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\nexport { format as formatDate };\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @alias formatDate\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date, options?.in);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let parts = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return { isToken: false, value: \"'\" };\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return { isToken: false, value: cleanEscapedString(substring) };\n      }\n\n      if (formatters[firstCharacter]) {\n        return { isToken: true, value: substring };\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return { isToken: false, value: substring };\n    });\n\n  // invoke localize preprocessor (only for french locales at the moment)\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  return parts\n    .map((part) => {\n      if (!part.isToken) return part.value;\n\n      const token = part.value;\n\n      if (\n        (!options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(token)) ||\n        (!options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(token))\n      ) {\n        warnOrThrowProtectedError(token, formatStr, String(date));\n      }\n\n      const formatter = formatters[token[0]];\n      return formatter(originalDate, token, locale.localize, formatterOptions);\n    })\n    .join(\"\");\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.js\";\nimport { startOfYear } from \"./startOfYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getDayOfYear} function options.\n */\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeek} function options.\n */\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeekYear} function options.\n */\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { startOfWeekYear } from \"./startOfWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\nexport function getWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(options?.in || date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(options?.in || date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (+_date >= +startOfNextYear) {\n    return year + 1;\n  } else if (+_date >= +startOfThisYear) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","import { isDate } from \"./isDate.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertible into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  return !((!isDate(date) && typeof date !== \"number\") || isNaN(+toDate(date)));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // [TODO] -- I challenge you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // [TODO] -- I challenge you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // [TODO] I challenge you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { formatDistance } from \"./en-US/_lib/formatDistance.js\";\nimport { formatLong } from \"./en-US/_lib/formatLong.js\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.js\";\nimport { localize } from \"./en-US/_lib/localize.js\";\nimport { match } from \"./en-US/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfDay} function options.\n */\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","import { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfISOWeek} function options.\n */\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date, options) {\n  return startOfWeek(date, { ...options, weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { getISOWeekYear } from \"./getISOWeekYear.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\n\n/**\n * The {@link startOfISOWeekYear} function options.\n */\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date, options) {\n  const year = getISOWeekYear(date, options);\n  const fourthOfJanuary = constructFrom(options?.in || date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date, options?.in);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { getWeekYear } from \"./getWeekYear.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(options?.in || date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfYear} function options.\n */\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date, options) {\n  const date_ = toDate(date, options?.in);\n  date_.setFullYear(date_.getFullYear(), 0, 1);\n  date_.setHours(0, 0, 0, 0);\n  return date_;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n","import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * Starting from v3.7.0, it clones a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument, context) {\n  // [TODO] Get rid of `toDate` or `constructFrom`?\n  return constructFrom(context || argument, argument);\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import mod from \"./index.js\";\n\nexport default mod;\nexport const DataSet = mod.DataSet;\nexport const ParserError = mod.ParserError;\nexport const PhraseBuilder = mod.PhraseBuilder;\nexport const RegExpMatcher = mod.RegExpMatcher;\nexport const SyntaxKind = mod.SyntaxKind;\nexport const TextCensor = mod.TextCensor;\nexport const assignIncrementingIds = mod.assignIncrementingIds;\nexport const asteriskCensorStrategy = mod.asteriskCensorStrategy;\nexport const collapseDuplicatesTransformer = mod.collapseDuplicatesTransformer;\nexport const compareMatchByPositionAndId = mod.compareMatchByPositionAndId;\nexport const englishDataset = mod.englishDataset;\nexport const englishRecommendedBlacklistMatcherTransformers = mod.englishRecommendedBlacklistMatcherTransformers;\nexport const englishRecommendedTransformers = mod.englishRecommendedTransformers;\nexport const englishRecommendedWhitelistMatcherTransformers = mod.englishRecommendedWhitelistMatcherTransformers;\nexport const fixedCharCensorStrategy = mod.fixedCharCensorStrategy;\nexport const fixedPhraseCensorStrategy = mod.fixedPhraseCensorStrategy;\nexport const grawlixCensorStrategy = mod.grawlixCensorStrategy;\nexport const keepEndCensorStrategy = mod.keepEndCensorStrategy;\nexport const keepStartCensorStrategy = mod.keepStartCensorStrategy;\nexport const parseRawPattern = mod.parseRawPattern;\nexport const pattern = mod.pattern;\nexport const randomCharFromSetCensorStrategy = mod.randomCharFromSetCensorStrategy;\nexport const remapCharactersTransformer = mod.remapCharactersTransformer;\nexport const resolveConfusablesTransformer = mod.resolveConfusablesTransformer;\nexport const resolveLeetSpeakTransformer = mod.resolveLeetSpeakTransformer;\nexport const skipNonAlphabeticTransformer = mod.skipNonAlphabeticTransformer;\nexport const toAsciiLowerCaseTransformer = mod.toAsciiLowerCaseTransformer;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * WordPress dependencies\n */\nimport { store, getContext } from '@wordpress/interactivity';\nimport {\n\tRegExpMatcher,\n\tTextCensor,\n\tenglishDataset,\n\tenglishRecommendedTransformers,\n} from 'obscenity';\nimport { format } from 'date-fns'\nimport {shallowEqual} from \"./components/ShallowEqual\";\nimport {removeLocalStorage} from \"./components/helper\";\n\n\nconst matcher = new RegExpMatcher({\n\t...englishDataset.build(),\n\t...englishRecommendedTransformers,\n});\n\n/* Basic + space + base64 encode application username:password for user who created? */\nconst saveScore = async () => {\n\tconsole.log(\"saveScore\");\n\tconst myHeaders = new Headers();\n\tmyHeaders.append(\"Content-Type\", \"application/json\");\n\tmyHeaders.append(\"Authorization\", \"Basic bGFyYTo0bFJYIEMydTUgaWd3YSBja0dYIGoyRHYgaldMcg==\");\n\n\t/* generate all variables - timeEnd, totalTime, firstTime, completed */\n\t// Do your operations to calculate time\n\tlet endDate   = new Date().getTime();\n\tlet minutes = (endDate - state.timeStart) / 60000;\n\tlet totalTime = Number(minutes + state.hintTime).toFixed(2);\n\tconsole.log(\"totalTime: \" + totalTime);\n\tstate.gameScore = 'total time: ' + totalTime + \" mins | hint time: \" + state.hintTime + ' | first time: \"' + state.firstTime + '\"';\n\tstate.showGameScore = true;\n\n\t/* hintTime is a state variable */\n\tconst raw = JSON.stringify({\n\t\t\"timeEnd\": endDate,\n\t\t\"totalTime\": totalTime,\n\t\t\"hintTime\": state.hintTime,\n\t\t\"completed\": 'yes',\n\t});\n\n\tconst requestOptions = {\n\t\tmethod: \"PUT\",\n\t\theaders: myHeaders,\n\t\tbody: raw,\n\t\tredirect: \"follow\"\n\t};\n\tconst url = state.siteURL + \"/wp-json/escapeout/v1/game-score/\" + state.gameScoreID;\n\ttry {\n\t\tconst response = await fetch(url, requestOptions)\n\t\tif (!response.ok) {\n\t\t\tconsole.error('Request failed with status ' + response.status)\n\t\t}\n\t} catch (error) {\n\t\tconsole.error('Error:', error.message)\n\t}\n\n\n\t/* apiFetch doesn't seem to work\n\tconst success = apiFetch( {\n\t\tpath: '/game-plugin-app-api/v1/game-user',\n\t\tmethod: 'POST',\n\t\tdata: {\n\t\t\t\"name\": \"John Doe2\",\n\t\t\t\"email\": \"jon@gmail.com2\"\n\t\t},\n\t} ).then( ( res ) => {\n\t\tconsole.log( res );\n\t} );*/\n};\nconst getScoreByID = async ({postID, userID, realTimeStart}) => {\n}\n\nconst createScore = async ({postID, userID, gameID, gameName, userEmail, designerEmail, designerName, timeStart, teamName}) => {\n\t/* note - can only update fields that you created, probably because of authorization... */\n\tconst myHeaders = new Headers();\n\tmyHeaders.append(\"Content-Type\", \"application/json\");\n\tmyHeaders.append(\"Access-Control-Allow-Headers\", \"Authorization, X-WP-Nonce, Content-Disposition, Content-MD5, Content-Type\");\n\tmyHeaders.append(\"Access-Control-Expose-Headers\",\"X-WP-Total, X-WP-TotalPages, Link\");\n\tmyHeaders.append( \"Authorization\", \"Bearer \" + btoa( 'lara:4lRX C2u5 igwa ckGX j2Dv jWLr' ));\n\tmyHeaders.append( \"Vary\", \"Origin\" );\n\t//myHeaders.append('X-WP-Nonce', nonce);\n\t/* check if first time */\n\tconst requestOptions = {\n\t\tmethod: \"GET\",\n\t\theaders: myHeaders,\n\t\tcredentials: \"include\"\n\t};\n\tconst url = state.siteURL + \"/wp-json/escapeout/v1/game-score/?userID=\" + userID + \"&postID=\" + postID;\n\n\ttry {\n\t\tconst response = await fetch(url, requestOptions)\n\t\tif (!response.ok) {\n\t\t\tconsole.error('Request failed with status ' + response.status)\n\t\t}\n\t\tconst data = await response.json();\n\t\tconsole.log('data.length: ' + data.length);\n\t\tstate.firstTime = \"yes\";\n\t\tif (data.length>1) {state.firstTime = \"no\";}\n\t\t/* create score */\n\t\tconst raw = JSON.stringify({\n\t\t\t\"postID\": postID,\n\t\t\t\"userID\": userID,\n\t\t\t\"gameID\": gameID,\n\t\t\t\"gameName\": gameName,\n\t\t\t\"userEmail\": userEmail,\n\t\t\t\"designerEmail\": designerEmail,\n\t\t\t\"designerName\": designerName,\n\t\t\t\"timeStart\": timeStart,\n\t\t\t\"teamName\": teamName,\n\t\t\t\"firstTime\": state.firstTime\n\t\t});\n\t\tconst requestOptions2 = {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: myHeaders,\n\t\t\tbody: raw,\n\t\t\tcredentials: \"include\"\n\t\t};\n\t\tconst url2 = state.siteURL + \"/wp-json/escapeout/v1/game-score/\";\n\t\ttry {\n\t\t\tconst response = await fetch(url2, requestOptions2)\n\t\t\tif (!response.ok) {\n\t\t\t\tconsole.error('Request failed with status ' + response.status)\n\t\t\t}\n\t\t\t/* get ID */\n\t\t\tconst requestOptions3 = {\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: myHeaders,\n\t\t\t\tcredentials: \"include\"\n\t\t\t};\n\t\t\tconst url3 = state.siteURL + \"/wp-json/escapeout/v1/game-score/?userID=\" + userID + \"&postID=\" + postID + \"&timeStart=\" + timeStart;\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(url3, requestOptions3)\n\t\t\t\tif (!response.ok) {\n\t\t\t\t\tconsole.error('Request failed with status ' + response.status)\n\t\t\t\t}\n\t\t\t\tconst data2 = await response.json();\n\t\t\t\t/*data is an array */\n\t\t\t\tconsole.log(\"data2: \" + JSON.stringify(data2));\n\t\t\t\tif (data2.length>0) {\n\t\t\t\t\tstate.gameScoreID = data2[0].id;\n\t\t\t\t\tlocalStorage.setItem(\"gameScoreID\",data2[0].id);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('Error3:', error.message)\n\t\t\t}\n\n\t\t} catch (error) {\n\t\t\tconsole.error('Error2:', error.message)\n\t\t}\n\n\t} catch (error) {\n\t\tconsole.error('Error1:', error.message)\n\t}\n\n\n\n\n\n\t/* apiFetch doesn't seem to work\n\tconst success = apiFetch( {\n\t\tpath: '/game-plugin-app-api/v1/game-user',\n\t\tmethod: 'POST',\n\t\tdata: {\n\t\t\t\"name\": \"John Doe2\",\n\t\t\t\"email\": \"jon@gmail.com2\"\n\t\t},\n\t} ).then( ( res ) => {\n\t\tconsole.log( res );\n\t} );*/\n};\n\nconst { state } = store( 'create-block', {\n\tstate: {\n\t\tget themeText() {\n\t\t\treturn state.isDark ? state.darkText : state.lightText;\n\t\t},\n\t},\n\tactions: {\n\t\thintWarningOpen() {\n\t\t\tstate.hintWarningVisible = true\n\t\t},\n\t\thintWarningClose() {\n\t\t\tstate.hintWarningVisible = false\n\t\t},\n\t\tsaveTextArea: () => {\n\t\t\tconst input = document.getElementById(\"textArea\").value;\n\t\t\tconsole.log(\"textAreaInput\" + input);\n\t\t},\n\t\tsetHintDisplayOn: () => {\n\t\t\tconst context = getContext();\n\t\t\tif (context.hintUsed === true) {\n\t\t\t\tcontext.hintDisplayOn = true;\n\t\t\t} else {\n\t\t\t\tstate.hintWarningVisible = true;\n\t\t\t}\n\n\t\t},\n\t\topenHint: () => {\n\t\t\tconst context = getContext();\n\t\t\tcontext.hintUsed = true;\n\t\t\tstate.hintWarningVisible = false;\n\t\t\tcontext.hintDisplayOn = true;\n\t\t\t/* add hint time */\n\t\t\tstate.hintTime = state.hintTime + 5;\n\t\t},\n\t\tquitWarningClose: () => {\n\t\t\tstate.hintID = '';\n\t\t\tstate.hintWarningVisible = false;\n\t\t},\n\t\tsetHintDisplayToggle: () => {\n\t\t\tconst context = getContext();\n\t\t\tcontext.hintDisplayOn = ! context.hintDisplayOn;\n\t\t},\n\t\tsetClueDisplayToggle: () => {\n\t\t\tconst context = getContext();\n\t\t\tcontext.clueDisplayOn = ! context.clueDisplayOn;\n\t\t},\n\t\tcheckClueDisplayOn: () => {\n\t\t\tconst context = getContext();\n\t\t\tif (state.clueDisplayOn = context.clueID) {\n\t\t\t\treturn true\n\t\t\t} else {\n\t\t\t\treturn false\n\t\t\t}\n\t\t},\n\t\tsetZoneVisible: () => {\n\t\t\tconst context = getContext();\n\t\t\tstate.zoneID = context.id;\n\t\t\tconsole.log(\"context.description:\" + context.description);\n\t\t\tif (context.description == \"\") {\n\t\t\t\tstate.zoneDescription = \" \";\n\t\t\t} else {\n\t\t\t\tstate.zoneDescription = context.description;\n\t\t\t}\n\t\t},\n\t\tsetPuzzleModalVisible: () => {\n\t\t\tconst context = getContext();\n\t\t\tcontext.modalOpen = true;\n\t\t\tconsole.log(\"context.modalOpen: \" + context.modalOpen);\n\t\t},\n\t\tsetPuzzleModalHidden: () => {\n\t\t\tconst context = getContext();\n\t\t\tconsole.log(\"close puzzle modal\");\n\t\t\tcontext.modalOpen = false;\n\t\t\tconsole.log(\"context.modalOpen: \" + context.modalOpen);\n\t\t},\n\t\tcloseHelp: () => {\n\t\t\tstate.zoneHelpVisible = false;\n\t\t\tstate.teamHelpVisible = false;\n\t\t\tstate.helpVisible = false;\n\t\t},\n\t\tsetZoneHelpVisible: () => {\n\t\t\tstate.zoneHelpVisible = true;\n\t\t\tstate.helpVisible = true;\n\t\t},\n\t\tsetTeamHelpVisible: () => {\n\t\t\tstate.teamHelpVisible = true;\n\t\t\tstate.helpVisible = true;\n\t\t},\n\t\ttogglePublicMap() {\n\t\t\tstate.modalPublicMapOpen = !state.modalPublicMapOpen;\n\t\t},\n\t\ttogglePublicImage() {\n\t\t\tstate.modalPublicImageOpen = !state.modalPublicImageOpen;\n\t\t},\n\t\tguessAttempt: () => {\n\t\t\tconst context = getContext();\n\t\t\tconsole.log( \"userID: \" + context.userID);\n\t\t\tif (!context.solved) {\n\t\t\t\tconst input = document.getElementById(context.puzzleID).value;\n\t\t\t\tcontext.guess = input;\n\t\t\t\tconsole.log(\"guess: \" + context.guess);\n\t\t\t\tconsole.log(\"answer: \" + context.answer);\n\t\t\t\tlet val = shallowEqual(context.guess, context.answer);\n\t\t\t\tconsole.log(\"val: \" + val);\n\t\t\t\tif (val) {\n\t\t\t\t\tstate.solvedCount++;\n\t\t\t\t\tconsole.log(state);\n\t\t\t\t\tconsole.log( \"userID: \" + context.userID);\n\t\t\t\t\tcontext.solved = true;\n\t\t\t\t\tcontext.timeEnd = Date();\n\t\t\t\t\tconsole.log( \"postID: \" + context.postID);\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tcontext.modalOpen = false\n\t\t\t\t\t}, 1600);\n\t\t\t\t\t/* check if finished */\n\t\t\t\t\tif (state.solvedCount === state.puzzleTotal) {\n\t\t\t\t\t\tstate.alertVisible = true\n\t\t\t\t\t\tstate.alertText = \"Winner\"\n\t\t\t\t\t\t/* send to database */\n\t\t\t\t\t\tsaveScore();\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tremoveLocalStorage();\n\t\t\t\t\t\t\tcontext.gameStart = false;\n\t\t\t\t\t\t\tcontext.finished = false;\n\t\t\t\t\t\t}, 1600);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcontext.showSorry = true;\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tcontext.showSorry = false\n\t\t\t\t\t}, 1600);\n\t\t\t\t}\n\t\t\t}},\n\t\ttoggleOpen() {\n\t\t\tconst context = getContext();\n\t\t\tcontext.isOpen = ! context.isOpen;\n\t\t},\n\t\tquitAlertOpen() {\n\t\t\tstate.quitVisible = true\n\t\t},\n\t\tquitAlertClose() {\n\t\t\tstate.quitVisible = false\n\t\t},\n\t\tquit() {\n\t\t\tconst context = getContext();\n\t\t\tremoveLocalStorage();\n\t\t\twindow.location.reload();\n\t\t\twindow.scrollTo(0, 0);\n\t\t},\n\t\tshowWaiverToggle() {\n\t\t\tstate.showWaiver = ! state.showWaiver;\n\t\t},\n\t\tsignWaiver() {\n\t\t\tconst context = getContext();\n\t\t\tcontext.waiverSigned=true;\n\t\t},\n\t\tgameStart() {\n\t\t\tconst context = getContext();\n\t\t\tconst input = document.getElementById(\"team-name\").value;\n\t\t\tcontext.teamName = input;\n\t\t\tconsole.log(\"context.teamName: \" + context.teamName);\n\t\t\t//state.showGameScore\n\t\t\t// check waiver\n\t\t\tif (context.waiverSigned === true) {\n\t\t\t\t//check teamName\n\t\t\t\tif (context.teamName !== '') {\n\t\t\t\t\tconsole.log(\"context.teamName (again): \" + context.teamName);\n\t\t\t\t\t/* check for obscenities */\n\t\t\t\t\tif (matcher.hasMatch(context.teamName)) {\n\t\t\t\t\t\tstate.errorMessage = \"The Team Name contains profanities. Please choose another.\";\n\t\t\t\t\t\tcontext.teamName=\"\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstate.errorMessage=\"\";\n\t\t\t\t\t\t/* need teamName in localstorage? */\n\t\t\t\t\t\tlocalStorage.setItem(\"teamName\", context.teamName);\n\t\t\t\t\t\t/* this is timeStart */\n\t\t\t\t\t\tconst date = new Date().getTime();\n\t\t\t\t\t\t/* ... */\n\t\t\t\t\t\tstate.timeStart = date;\n\t\t\t\t\t\tlocalStorage.setItem(\"timeStart\", date);\n\t\t\t\t\t\tstate.formattedTimeStart =  format(date, \"MM/dd/yy h:mma\");\n\t\t\t\t\t\tcontext.gameStart = true;\n\t\t\t\t\t\tstate.gameScore = '';\n\t\t\t\t\t\tstate.showGameScore = false;\n\t\t\t\t\t\tstate.hintTime=0;\n\t\t\t\t\t\tstate.showWaiver=false;\n\n\t\t\t\t\t\tcreateScore({postID:context.postID, userID:context.userID, gameID:context.gameID, gameName:context.gameName, userEmail:context.userEmail, designerEmail: context.designerEmail, designerName: context.designerName, timeStart:date, teamName: context.teamName});\n\t\t\t\t\t\t/* get gameScoreID */\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t//set errorMessage\n\t\t\t\t\tstate.errorMessage = \"Please choose a Team Name\"\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tstate.errorMessage=\"You Need to Sign Waiver\";\n\t\t\t}\n\t\t},\n\t\ttoggleTheme() {\n\t\t\tstate.isDark = ! state.isDark;\n\t\t},\n\t},\n\tcallbacks: {\n\t\thideItemByZone: () => {\n\t\t\tconst context = getContext();\n\t\t\tconsole.log(\"context.zoneID: \" + context.zoneID);\n\t\t\tconsole.log(\"context.firstZoneID: \" + context.firstZoneID);\n\t\t\tconsole.log(\"state.zoneID: \" + state.zoneID);\n\t\t\tif ((context.zoneID == state.zoneID) || (state.zoneID === '' && context.zoneID === context.firstZoneID)) {\n\t\t\t\tconsole.log(\"don't hide zone\");\n\t\t\t\treturn false\n\t\t\t} else {\n\t\t\t\tconsole.log(\"hide zone\");\n\t\t\t\treturn true\n\t\t\t}\n\t\t},\n\t\thideItemByZoneID: () => {\n\t\t\tconst context = getContext();\n\t\t\t//console.log(\"context.zoneID: \" + context.zoneID);\n\t\t\tconsole.log(\"context.id: \" + context.id);\n\t\t\tconsole.log(\"context.firstZoneID: \" + context.firstZoneID);\n\t\t\tconsole.log(\"state.zoneID: \" + state.zoneID);\n\t\t\tif ((context.id == state.zoneID) || (state.zoneID === '' && context.id === context.firstZoneID)) {\n\t\t\t\tconsole.log(\"don't hide zone\");\n\t\t\t\treturn false\n\t\t\t} else {\n\t\t\t\tconsole.log(\"hide zone\");\n\t\t\t\treturn true\n\t\t\t}\n\t\t},\n\t\tsetAlertText: () => {\n\t\t\tstate.alertVisible = true;\n\t\t\tsetTimeout(() => {\n\t\t\t\tstate.alertVisible = false;\n\t\t\t}, 3000);\n\t\t},\n\t\tzoneBorder: () => {\n\t\t\tconst context = getContext();\n\t\t\tif ((state.zoneID == context.id) || (state.zoneID === '' && context.firstZoneID == context.id))\n\t\t\t\treturn true;\n\t\t},\n\t\tzoneDescription: () => {\n\t\t\tif (state.zoneDescription !== '') {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t},\n\t\tsaveNotes: () => {\n\t\t\tconst textareaElement = document.getElementById(\"textArea\");\n\t\t\tconsole.log(\"textArea value: \" + textareaElement.value);\n\t\t},\n\t\tcheckGameStart: () => {\n\t\t\tconst context = getContext();\n\t\t\tif (localStorage.getItem(\"timeStart\")) {\n\t\t\t\t//alert('resuming game');\n\t\t\t\tstate.alertVisible = true\n\t\t\t\tstate.alertText = \"resuming game\"\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tstate.alertVisible = false\n\t\t\t\t}, 3000);\n\t\t\t\tif (context.gameStart === true) {\n\t\t\t\t\tconsole.log(\"gameStart: true\");\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(\"gameStart: false\");\n\t\t\t\t}\n\t\t\t\tcontext.gameStart = true;\n\t\t\t}\n\t\t},\n\t\tlogIsOpen: () => {\n\t\t\tconst { isOpen } = getContext();\n\t\t\tconsole.log( `Is open: ${ isOpen }` );\n\t\t},\n\t},\n} );\n"],"names":["shallowEqual","object1","object2","console","log","keys1","Object","keys","length","keys2","key","toLowerCase","removeLocalStorage","localStorage","removeItem","store","getContext","RegExpMatcher","TextCensor","englishDataset","englishRecommendedTransformers","format","matcher","build","saveScore","myHeaders","Headers","append","endDate","Date","getTime","minutes","state","timeStart","totalTime","Number","hintTime","toFixed","gameScore","firstTime","showGameScore","raw","JSON","stringify","requestOptions","method","headers","body","redirect","url","siteURL","gameScoreID","response","fetch","ok","error","status","message","getScoreByID","postID","userID","realTimeStart","createScore","gameID","gameName","userEmail","designerEmail","designerName","teamName","btoa","credentials","data","json","requestOptions2","url2","requestOptions3","url3","data2","id","setItem","themeText","isDark","darkText","lightText","actions","hintWarningOpen","hintWarningVisible","hintWarningClose","saveTextArea","input","document","getElementById","value","setHintDisplayOn","context","hintUsed","hintDisplayOn","openHint","quitWarningClose","hintID","setHintDisplayToggle","setClueDisplayToggle","clueDisplayOn","checkClueDisplayOn","clueID","setZoneVisible","zoneID","description","zoneDescription","setPuzzleModalVisible","modalOpen","setPuzzleModalHidden","closeHelp","zoneHelpVisible","teamHelpVisible","helpVisible","setZoneHelpVisible","setTeamHelpVisible","togglePublicMap","modalPublicMapOpen","togglePublicImage","modalPublicImageOpen","guessAttempt","solved","puzzleID","guess","answer","val","solvedCount","timeEnd","setTimeout","puzzleTotal","alertVisible","alertText","gameStart","finished","showSorry","toggleOpen","isOpen","quitAlertOpen","quitVisible","quitAlertClose","quit","window","location","reload","scrollTo","showWaiverToggle","showWaiver","signWaiver","waiverSigned","hasMatch","errorMessage","date","formattedTimeStart","toggleTheme","callbacks","hideItemByZone","firstZoneID","hideItemByZoneID","setAlertText","zoneBorder","saveNotes","textareaElement","checkGameStart","getItem","logIsOpen"],"sourceRoot":""}